{
    "componentChunkName": "component---src-templates-graphics-js",
    "path": "/graphics/simpleAnimation/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar QuoteList = [\"例如在广告牌技术中, 为避免使用模型空间来作锚点, 可以利用顶点颜色来存储每个顶点到锚点的距离值\"];\nvar _frontmatter = {\n  \"title\": \"Graphics Programming(八) —— 简单动画\",\n  \"tags\": [\"graphics\"],\n  \"index\": 8\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aphorism = makeShortcode(\"Aphorism\");\nvar Tab = makeShortcode(\"Tab\");\nvar Expansion = makeShortcode(\"Expansion\");\nvar Table = makeShortcode(\"Table\");\nvar Quote = makeShortcode(\"Quote\");\nvar layoutProps = {\n  QuoteList: QuoteList,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Aphorism, {\n    mdxType: \"Aphorism\"\n  }, \"\\u52A8\\u753B = \\u6570\\u5B66\\u8BA1\\u7B97\\u51FD\\u6570f(\\u65F6\\u95F4\\u53D8\\u91CFt)\"), mdx(\"p\", null, \"\\u5982\\u4F55\\u52A8\\u8D77\\u6765:\"), mdx(Tab, {\n    mdxType: \"Tab\"\n  }, mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u65F6\\u95F4\\u53D8\\u91CF\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u7528shader\\u7684\\u52A8\\u753B\\u6548\\u679C\\u4E00\\u822C\\u662F\\u5C06\\u65F6\\u95F4\\u53D8\\u91CF\\u52A0\\u5165\\u8BA1\\u7B97. \\u4EE5\\u4FBF\\u5F53\\u65F6\\u95F4\\u53D8\\u5316\\u65F6\\u753B\\u9762\\u4E5F\\u968F\\u4E4B\\u53D8\\u5316\", mdx(\"br\", null), \"unity\\u6240\\u6709\\u7684\\u5185\\u7F6E\\u65F6\\u95F4\\u53D8\\u91CF\\u90FD\\u662Ffloat4\\u7C7B\\u578B\", mdx(Table, {\n    title: \"unity\\u5185\\u7F6E\\u7684\\u65F6\\u95F4\\u53D8\\u91CF\",\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"名称\", \"t的含义\", \"描述\"],\n    component: ['th', 'th', 'th']\n  }, {\n    cells: [\"_Time\", \"自该场景加载开始所经过的时间\", \"(t/20, t, 2t, 3t)\"]\n  }, {\n    cells: [\"_SinTime\", \"时间的正弦值\", \"(t/8, t/4, t/2, t)\"]\n  }, {\n    cells: [\"_CosTime\", \"时间的余弦值\", \"(t/8, t/4, t/2, t)\"]\n  }, {\n    cells: [\"unity_DeltaTime\", \"时间的增量\", \"(t, 1/t, smooth(t), 1/smooth(t))\"]\n  }]))), mdx(\"p\", null), mdx(\"p\", null, \"\\u7EB9\\u7406\\u52A8\\u753B:\"), mdx(Tab, {\n    mdxType: \"Tab\"\n  }, mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u5E8F\\u5217\\u5E27\\u52A8\\u753B\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u5E8F\\u5217\\u5E27\\u52A8\\u753B(Image Sequence Animation): \\u901A\\u8FC7\\u64AD\\u653E\\u8FDE\\u7EED\\u7684\\u5E8F\\u5217\\u5E27\\u6765\\u5B9E\\u73B0\\u52A8\\u753B\", mdx(\"br\", null), \"\\u6CE8\\u610F: unity\\u4E2D\\u7EB9\\u7406\\u5750\\u6807\\u7AD6\\u76F4\\u65B9\\u5411\\u987A\\u5E8F(\\u4ECE\\u4E0B\\u5230\\u4E0A\\u9010\\u6E10\\u589E\\u5927)\\u548C\\u901A\\u5E38\\u5E8F\\u5217\\u5E27\\u987A\\u5E8F(\\u4ECE\\u4E0A\\u5230\\u4E0B)\\u76F8\\u53CD.\"), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u6EDA\\u52A8\\u80CC\\u666F\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u6EDA\\u52A8\\u80CC\\u666F\\u901A\\u5E38\\u4F7F\\u7528\\u591A\\u4E2Alayer\\u6765\\u6A21\\u62DF\\u89C6\\u5DEE\")), mdx(\"p\", null), mdx(\"p\", null, \"\\u9876\\u70B9\\u52A8\\u753B:\"), mdx(Tab, {\n    mdxType: \"Tab\"\n  }, mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u6CE8\\u610F\\u4E8B\\u9879\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u9876\\u70B9\\u52A8\\u753B\\u5F80\\u5F80\\u4E0D\\u5F97\\u4E0D\\u5728SubShader\\u4E2D\\u5199\\\"DisableBatching\\\"=\\\"True\\\"\\u6807\\u7B7E\\u6765\\u5F3A\\u5236\\u53D6\\u6D88\\u6279\\u5904\\u7406, \\u4F46\\u589E\\u52A0Draw Call.\", mdx(\"br\", null), \"\\u5176\\u4E2D\\u6700\\u5E94\\u907F\\u514D\\u7684\\u662F\\u5229\\u7528\\u6A21\\u578B\\u7A7A\\u95F4\\u4E0B\\u7684\\u7EDD\\u5BF9\\u4F4D\\u7F6E\\u548C\\u65B9\\u5411\\u8BA1\\u7B97, \", mdx(Quote, {\n    id: \"#1\",\n    mdxType: \"Quote\"\n  }, \"\\u5E94\\u5C3D\\u91CF\\u4F7F\\u7528\\u5176\\u5B83\\u65B9\\u5F0F\\u4EE3\\u66FF\"), \".\", mdx(\"br\", null), \"\\u9876\\u70B9\\u52A8\\u753B\\u7684\\u7269\\u4F53\\u6DFB\\u52A0\\u9634\\u5F71\\u4E5F\\u9700\\u8981\\u81EA\\u5DF1\\u63D0\\u4F9BShadowCaster Pass.\"), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u6CB3\\u6D41\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u6CB3\\u6D41\\u6A21\\u62DF\\u901A\\u5E38\\u4F7F\\u7528\\u6B63\\u5F26\\u51FD\\u6570\\u6A21\\u62DF\\u6C34\\u6D41\\u6CE2\\u52A8\"), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u5E7F\\u544A\\u724C\\u6280\\u672F\"), \":\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"\\u5E7F\\u544A\\u724C\\u6280\\u672F(Billboarding): \\u6839\\u636E\\u89C6\\u89D2\\u65CB\\u8F6C\\u7279\\u5B9A\\u5BF9\\u8C61, \\u4F7F\\u5F97\\u8BE5\\u5BF9\\u8C61\\u603B\\u662F\\u9762\\u5BF9\\u6444\\u50CF\\u673A\", mdx(\"br\", null), \"\\u672C\\u8D28\\u4E3A\\u6784\\u5EFA\\u65CB\\u8F6C\\u77E9\\u9635. \\u8BE5\\u77E9\\u9635\\u7684\\u57FA\\u901A\\u5E38\\u4E3A: \\u8868\\u9762\\u6CD5\\u7EBF, \\u4E0A\\u65B9\\u5411\\u5355\\u4F4D\\u5411\\u91CF, \\u53F3\\u65B9\\u5411\\u5355\\u4F4D\\u5411\\u91CF. \\u4E14\\u9700\\u8981\\u951A\\u70B9\\u4FDD\\u6301\\u7269\\u4F53\\u4F4D\\u7F6E\\u4E0D\\u53D8\", mdx(\"br\", null), \"\\u800C\\u4E09\\u4E2A\\u57FA\\u5411\\u91CF\\u901A\\u5E38\\u4E0D\\u5782\\u76F4. \\u4F46\\u5B9E\\u73B0\\u65F6\\u81F3\\u5C11\\u6709\\u4E00\\u4E2A\\u662F\\u56FA\\u5B9A\\u7684.\", mdx(\"br\", null), \"\\u5047\\u8BBE\\u8868\\u9762\\u6CD5\\u7EBF\\u56FA\\u5B9A(\\u7C92\\u5B50\\u6548\\u679C\\u7B49): \\u8BA1\\u7B97: normalized(right = up x normal); \\u4FEE\\u6B63: up = normal x right\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Graphics Programming(八) —— 简单动画","tags":["graphics"]},"fields":{"slug":"/graphics/simpleAnimation","templateTag":"graphics"},"exports":{"QuoteList":["例如在广告牌技术中, 为避免使用模型空间来作锚点, 可以利用顶点颜色来存储每个顶点到锚点的距离值"],"ImgList":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/graphics"},"frontmatter":{"title":"Graphics Programming(一) —— 渲染流水线","index":1}}},{"node":{"fields":{"slug":"/graphics/priorKnowledge"},"frontmatter":{"title":"Graphics Programming(二) —— 前置知识","index":2}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis"},"frontmatter":{"title":"Graphics Programming(三) —— 编写shader的数学基础","index":3}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis/innerMatrix"},"frontmatter":{"title":"内置的变量: inner matrix","index":3.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax"},"frontmatter":{"title":"Graphics Programming(四) —— Shader语法","index":4}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader1.0"},"frontmatter":{"title":"固定函数着色器: Fixed Function Shader","index":4.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader2.0"},"frontmatter":{"title":"顶点/片元着色器: Vertex/Fragment Shader","index":4.2}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader3.0"},"frontmatter":{"title":"表面着色器: Surface Shader","index":4.3}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shaderLab&CG"},"frontmatter":{"title":"shaderLab和CG的联系与区别","index":4.4}}},{"node":{"fields":{"slug":"/graphics/illumination"},"frontmatter":{"title":"Graphics Programming(五) —— 光照","index":5}}},{"node":{"fields":{"slug":"/graphics/texture"},"frontmatter":{"title":"Graphics Programming(六) —— 纹理","index":6}}},{"node":{"fields":{"slug":"/graphics/transparency"},"frontmatter":{"title":"Graphics Programming(七) —— 透明效果","index":7}}},{"node":{"fields":{"slug":"/graphics/simpleAnimation"},"frontmatter":{"title":"Graphics Programming(八) —— 简单动画","index":8}}},{"node":{"fields":{"slug":"/graphics/post-processing"},"frontmatter":{"title":"Graphics Programming(九) —— 后期处理效果","index":9}}},{"node":{"fields":{"slug":"/graphics/particularRendering"},"frontmatter":{"title":"Graphics Programming(十) —— 特殊渲染","index":10}}}]}},"pageContext":{"frontmatter":{"title":"Graphics Programming(八) —— 简单动画","tags":["graphics"],"index":8},"title":"Graphics Programming(八) —— 简单动画","date":null,"slug":"/graphics/simpleAnimation","genByTemplate":"graphics"}},
    "staticQueryHashes": ["2763354658","3649515864","49750724","63159454"]}