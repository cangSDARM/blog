{"version":3,"file":"component---src-templates-network-js-24e7f6c2dcca11fe62b3.js","mappings":"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","sources":["webpack://gatsby-website/./src/components/indexing/index.tsx","webpack://gatsby-website/./src/templates/network.js","webpack://gatsby-website/./src/components/network/style.module.css"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction findIndex(data: any | undefined, slug: string) {\n  let element;\n  if (data)\n    for (element of data) {\n      const { node } = element;\n      if (slug === node?.fields?.slug) {\n        return node?.frontmatter?.index - 1;\n      }\n    }\n  return -1;\n}\n\n/**\n * Skip elements without integer index\n * @param {Array} data\n */\nfunction jumpNonNavigable(data: any[]) {\n  return Array.from(data).filter(\n    (element) => element?.node?.frontmatter?.index?.toString().indexOf(\".\") < 0\n  );\n}\n\nfunction getPrevious(data: any[], index: number) {\n  if (data) return data[index - 1]?.node;\n  return undefined;\n}\n\nfunction getNext(data: any[], index: number) {\n  if (data) return data[index + 1]?.node;\n  return undefined;\n}\n\nfunction ensureExist(\n  element = {\n    fields: {\n      slug: \"/\",\n    },\n    frontmatter: {\n      title: \"首页\",\n      index: -1,\n    },\n  }\n) {\n  return element;\n}\n\nfunction maxLength(text: string, maximum = 10) {\n  let res = text.substr(0, maximum);\n  if (text.length > maximum) {\n    res += \"...\";\n    res += text.substr(Math.max(res.length + 6, text.length - maximum));\n  }\n  return res;\n}\n\nconst Indexing: React.FC<{ slug: string; data: any[] }> = ({\n  slug,\n  data,\n  ...otherProps\n}) => {\n  data = jumpNonNavigable(data);\n  const index = findIndex(data, slug);\n  const previous = ensureExist(getPrevious(data, index));\n  const next = ensureExist(getNext(data, index));\n\n  return index > -1 ? (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n      {...otherProps}\n    >\n      {/** @ts-ignore */}\n      <Link to={previous.fields.slug} name=\"previous\">\n        {`<-`}\n        {maxLength(previous.frontmatter.title)}\n        {`-`}\n      </Link>\n      {/** @ts-ignore */}\n      <Link to={next?.fields?.slug} name=\"previous\">\n        {`-`}\n        {maxLength(next?.frontmatter?.title)}\n        {` ->`}\n      </Link>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Indexing;\n","import { MDXProvider } from \"@mdx-js/react\";\nimport { graphql } from \"gatsby\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport React from \"react\";\nimport Indexing from \"../components/indexing\";\nimport Layout from \"../components/layout\";\nimport * as styles from \"../components/network/style.module.css\";\nimport SEO from \"../components/seo\";\nimport TagsList from \"../components/tag-lists\";\n\nconst shotCodes = {\n  h3: (props) => <h3 style={{ margin: `20px 0 10px` }} {...props} />,\n  // p: props => <p className={styles.cp} {...props} />,\n  blockquote: (props) => (\n    <blockquote className={styles.cblockquote} {...props} />\n  ),\n};\n\nexport default function Template({ data }) {\n  const { mdx, headerIamge, allMdx } = data;\n  const { frontmatter, body, fields } = mdx;\n  let title =\n    fields.slug === `/${fields.templateTag}`\n      ? `Network-Top2Down`\n      : frontmatter.title;\n  return (\n    <Layout\n      header={{\n        style: {\n          backgroundImage: `url(${getSrc(headerIamge.childImageSharp)})`,\n          backgroundSize: `cover`,\n        },\n      }}\n    >\n      <SEO\n        title={title}\n        config={{\n          titleTemplate:\n            fields.slug === `/${fields.templateTag}`\n              ? `%s`\n              : `%s | Network-Top2Down`,\n        }}\n      ></SEO>\n      <div\n        className={styles.netPost}\n        style={{\n          maxWidth: `960px`,\n          fontFamily: `YaHei, Helvetica, arial, sans-serif`,\n          fontSize: `16px`,\n        }}\n      >\n        <h1>{frontmatter.title}</h1>\n        <Indexing slug={fields.slug} data={allMdx?.edges} />\n        <TagsList tags={frontmatter.tags} />\n        {/* <TagsList tags={post.frontmatter.tags} /> */}\n        <MDXProvider components={shotCodes}>\n          <MDXRenderer>{body}</MDXRenderer>\n        </MDXProvider>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        tags\n        title\n      }\n      fields {\n        slug\n        templateTag\n      }\n    }\n\n    allMdx(\n      sort: { fields: [frontmatter___index, fileAbsolutePath], order: ASC }\n      filter: { frontmatter: { tags: { in: [\"network\"] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            index\n          }\n        }\n      }\n    }\n\n    headerIamge: file(relativePath: { eq: \"network-logo.png\" }) {\n      childImageSharp {\n        gatsbyImageData(formats: [AUTO, WEBP], quality: 100)\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var netPost = \"style-module--netPost--3ipfI\";\nexport var cblockquote = \"style-module--cblockquote--3dEHt\";"],"names":["ensureExist","element","fields","slug","frontmatter","title","index","maxLength","text","maximum","res","substr","length","Math","max","data","otherProps","node","findIndex","Array","from","filter","toString","indexOf","jumpNonNavigable","previous","getPrevious","next","getNext","style","width","display","justifyContent","Link","to","name","shotCodes","h3","props","margin","blockquote","className","Template","mdx","headerIamge","allMdx","body","templateTag","header","backgroundImage","getSrc","childImageSharp","backgroundSize","config","titleTemplate","maxWidth","fontFamily","fontSize","edges","tags","MDXProvider","components","MDXRenderer"],"sourceRoot":""}