{"version":3,"sources":["webpack://gatsby-website/./src/templates/tags.js"],"names":["pageContext","data","tag","allMdx","edges","totalCount","tagHeader","main","style","flexDirection","listStyle","map","node","slug","fields","depth","match","shift","title","frontmatter","key","_","i","width","display","Link","to"],"mappings":"8JA6EA,UAxEa,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,OAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gBAAC,IAAD,CACEK,KAAM,CACJC,MAAO,CACLC,cAAc,YAIlB,0BAAKH,GACL,2BACE,sBACEE,MAAO,CACLE,UAAU,SAGXN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACJE,EAAQF,EAAKG,MAAM,QAAU,GACjCD,EAAME,QACNF,EAAME,QACN,IAAQC,EAAUN,EAAKO,YAAfD,MACR,OACE,sBAAIE,IAAKP,GACNE,EAAMJ,KAAI,SAACU,EAAGC,GACb,OACE,wBACEF,IAAG,IAAME,EACTd,MAAO,CAAEe,MAAM,MAAQC,QAAQ,qBAIrC,gBAAC,EAAAC,KAAD,CAAMC,GAAOb,EAAL,KAAeK","file":"component---src-templates-tags-js-c7ec704381a6ecd496b6.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMdx;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout\n      main={{\n        style: {\n          flexDirection: `column`,\n        },\n      }}\n    >\n      <h1>{tagHeader}</h1>\n      <div>\n        <ul\n          style={{\n            listStyle: `none`,\n          }}\n        >\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            let depth = slug.match(/\\//g) || [];\n            depth.shift();\n            depth.shift();\n            const { title } = node.frontmatter;\n            return (\n              <li key={slug}>\n                {depth.map((_, i) => {\n                  return (\n                    <span\n                      key={`_${i}`}\n                      style={{ width: `1em`, display: `inline-block` }}\n                    ></span>\n                  );\n                })}\n                <Link to={`${slug}/`}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: {\n        fields: [frontmatter___index, frontmatter___date, fileAbsolutePath]\n        order: ASC\n      }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}