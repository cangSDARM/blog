{"pageProps":{"post":{"matter":{"title":"内置的变量: inner matrix","tags":["graphics"],"index":3.1},"absPath":"/home/runner/work/blog/blog/renderer/mdx/graphics/mathematicalBasis/innerMatrix.mdx","type":"mdx","slug":["mathematicalBasis","innerMatrix"],"collection":"graphics","url":"/graphics/mathematicalBasis/innerMatrix"},"compiled":{"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst title = \"内置的变量: inner matrix\", tags = [\"graphics\"], index = 3.1;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\"\n  }, props.components), {Navigation, Table} = _components;\n  if (!Navigation) _missingMdxReference(\"Navigation\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Navigation, {\n      desc: \"返回\",\n      to: \"./\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"--------------------------------------------------------------------------------------------------------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"-----------------------------------UNITY_MATRIX_MV及其相关矩阵需要特别留意----------------------------------\"\n    }), \"\\n\", _jsx(Table, {\n      title: \"内置的变换矩阵\",\n      children: [{\n        cells: [\"UNITY_MATRIX_MVP\", \"模型->世界->观察->裁剪的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_MV\", \"模型->世界->观察的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_V\", \"世界->观察的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_P\", \"观察->裁剪的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_VP\", \"世界->观察->裁剪的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_T_MV\", \"UNITY_MATRIX_MV的转置矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"UNITY_MATRIX_IT_MV\", \"UNITY_MATRIX_MV的逆转置矩阵(可以用于得到UNITY_MATRIX_MV的逆矩阵\\n 法线从模型->世界->观察的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"_Object2World\", \"模型->世界的矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"_World2Object\", \"_Object2World的逆矩阵. 世界->模型的矩阵\"],\n        component: ['th']\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"--------------------------------------------------------------------------------------------------------\"\n    }), \"\\n\", _jsx(Table, {\n      title: \"摄像机及屏幕参数\",\n      children: [{\n        cells: [\"_WorldSpaceCameraPos\", \"float3\", \"摄像机在世界空间中的位置\"],\n        component: ['th']\n      }, {\n        cells: [\"_ProjectionParams\", \"float4\", \"x=±1, y=Near, z=Far, w=1.0+1.0/Far\"],\n        component: ['th']\n      }, {\n        cells: [\"_ScreenParams\", \"float4\", \"x=width, y=height, z=1.0+1.0/width, w=1.0+1.0/height\"],\n        component: ['th']\n      }, {\n        cells: [\"_ZBufferParams\", \"float4\", \"x=1-Far/Near, y=Far/Near, z=x/Far, w=y/Far, 用于线性化Z缓存的深度值\"],\n        component: ['th']\n      }, {\n        cells: [\"unity_OrthoParams\", \"float4\", \"x=width, y=height, z没有定义, w=1.0(正交)|0.0(透视)\"],\n        component: ['th']\n      }, {\n        cells: [\"unity_CameraProjection\", \"float4×4\", \"摄像机的投影矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"unity_CameraInvProjection\", \"float4×4\", \"摄像机的投影矩阵的逆矩阵\"],\n        component: ['th']\n      }, {\n        cells: [\"unity_CameraWorldClipPlanes[6]\", \"float4\", \"摄像机的6个裁剪平面在世界空间下的等式, 按: 左右下上近远\"],\n        component: ['th']\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"--------------------------------------------------------------------------------------------------------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2017后版本变化:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"replaced '_World2Object' with 'unity_WorldToObject'\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  title,\n  tags,\n  index,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","toc":[]},"overview":[{"length":21,"name":"archive"},{"length":15,"name":"graphics"},{"length":1,"name":"math"},{"length":8,"name":"network"}]},"__N_SSG":true}