{"componentChunkName":"component---src-templates-graphics-js","path":"/graphics/shaderSyntax/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar QuoteList = [\"shader名字显示在Inspector中. 类似于\\\"Custom/Shader\\\"的会出现在材质面板中的Shader->Custom->Shader\", \"属性, 类似c#的public字段. Properties仅仅是为了在面板中展示字段, 其中的定义与赋值可以在任何内容中写\", \"2D贴图的 \\\" \\\" 内 可选择: white, red, bump, black 或 空字符串\", \"3D纹理只能用脚本创建, 且 OpenGL3.0 以上才支持\", \"相当于main函数. 而当当前显卡不支持时就会报错. 单独出错则跳过, 全部出错跳转到Fallback\", \"每个 Pass 引起一次渲染流水线\", \"#7未使用\", \"渲染设置, 如颜色混合等. 也可以在Pass中设置. 在这里设置适用于所有Pass\", \"这里所写的所有标签key值是SubShader独有的. Pass中无法设置\", \"名字应该全为大写字符(因为Unity自动将小写转为大写)\", \"5.3时Unity只支持: SoftVegetation\"];\nvar _frontmatter = {\n  \"title\": \"Graphics Programming(四) —— Shader语法\",\n  \"tags\": [\"graphics\"],\n  \"index\": 4\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aphorism = makeShortcode(\"Aphorism\");\nvar Quote = makeShortcode(\"Quote\");\nvar Tab = makeShortcode(\"Tab\");\nvar Expansion = makeShortcode(\"Expansion\");\nvar Table = makeShortcode(\"Table\");\nvar Naviagtion = makeShortcode(\"Naviagtion\");\nvar layoutProps = {\n  QuoteList: QuoteList,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Aphorism, {\n    mdxType: \"Aphorism\"\n  }, \"\\u8FC7\\u591A\\u7684\\u8BA1\\u7B97\\u548C\\u6240\\u6709\\u7684\\u63A7\\u5236\\u8BED\\u53E5\\u662F\\u964D\\u4F4EFPS\\u7684\\u5143\\u51F6\\u4E4B\\u4E00\"), mdx(\"p\", null, \"Shader \", mdx(Quote, {\n    id: \"#1\",\n    mdxType: \"Quote\"\n  }, \"\\\"ShaderName\\\"\"), \"{\"), mdx(Tab, {\n    mdxType: \"Tab\"\n  }, mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, mdx(Quote, {\n    id: \"#2\",\n    mdxType: \"Quote\"\n  }, \"Properties\")), \"{\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"//\\u5B9A\\u4E49\\u65B9\\u5F0F1:\", mdx(\"br\", null), \"\\u53D8\\u91CF\\u540D (\\\"Inspector\\u663E\\u793A\\u7684\\u540D\\u5B57\\\", \", mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"\\u7C7B\\u578B\\u540D\"), \") = \\u521D\\u59CB\\u503C\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, mdx(Table, {\n    className: \"UpWord\",\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"含义\", \"类型名\", \"初始值/注意事项\"],\n    component: ['th', 'th', 'th']\n  }, {\n    cells: [\"滑块\", \"Range(min初始值, max初始值)\", \"滑块位置\"]\n  }, {\n    cells: [\"整型\", \"Int\", '']\n  }, {\n    cells: [\"浮点数\", \"Float\", '']\n  }, {\n    cells: [\"颜色\", \"Color\", \"(R, G, B, A) / 范围[0, 1]\"]\n  }, {\n    cells: [\"四维向量\", \"Vector\", \"(1, 2, 3, 4)\"]\n  }, {\n    cells: [\"2D贴图\", \"2D\", mdx(\"span\", null, \"\\\"\\\" {} / \", mdx(Quote, {\n      id: \"#3\",\n      mdxType: \"Quote\"\n    }, \"(\\u4E00)\"))]\n  }, {\n    cells: [\"六面贴图\", \"Cube\", \"\\\"\\\" {}\"]\n  }, {\n    cells: [\"3D纹理\", \"3D\", mdx(\"span\", null, \"\\\"\\\" {} / \", mdx(Quote, {\n      id: \"#4\",\n      mdxType: \"Quote\"\n    }, \"(\\u4E8C)\"))]\n  }]))), \"}\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"//\\u53EF\\u80FD\\u5B58\\u5728\\u591A\\u4E2A SubShader. unity\\u987A\\u5E8F\\u6267\\u884C SubShader.\"), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, mdx(Quote, {\n    id: \"#5\",\n    mdxType: \"Quote\"\n  }, \"SubShader\")), \"{\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, \"// SubShader\\u7684\\u6807\\u7B7E, \\u662F\\u952E\\u503C\\u5BF9\", mdx(\"br\", null), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, mdx(Quote, {\n    id: \"#9\",\n    mdxType: \"Quote\"\n  }, \"Tags\")), mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, mdx(Table, {\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"类型\", \"说明\"],\n    component: ['th', 'th']\n  }, {\n    cells: [\"Queue\", \"控制渲染顺序. 通过这种方式来保证透明物体在不透明物体的渲染队列后\"]\n  }, {\n    cells: [\"RenderType\", \"对着色器分类. 可用于着色器替换功能\"]\n  }, {\n    cells: [\"DisableBatching\", \"说明是否对该SubShader使用批处理\"]\n  }, {\n    cells: [\"ForceNoShadowCasting\", \"控制物体是否会产生投影\"]\n  }, {\n    cells: [\"IgnoreProjector\", \"控制物体是否会受Projector的影响. 通常用于半透明物体\"]\n  }, {\n    cells: [\"CanUseSpriteAtlas\", \"当用于精灵体时, 该标签应为False\"]\n  }, {\n    cells: [\"PreviewType\", \"指明材质面板如何预览材质. 值可以是Plane/Cube/SkyBox/Sphere等\"]\n  }])), mdx(\"br\", null), mdx(Quote, {\n    id: \"#8\",\n    mdxType: \"Quote\"\n  }, \"//\\u516C\\u7528\\u8BBE\\u7F6E\\u533A\\u57DF\"), mdx(\"br\", null), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"...\"), mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, mdx(Table, {\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"设置指令\", \"解释\"],\n    component: ['th', 'th']\n  }, {\n    cells: [\"Cull Back|Front|Off\", \"设置剔除: 背面/正面/关闭\"]\n  }, {\n    cells: [\"ZTest Less Greater|LEqual|GEqual|Equal|NotEqual|Aways\", \"设置深度测试时的函数\"]\n  }, {\n    cells: [\"ZWrite On|Off\", \"设置深度写入开启/关闭\"]\n  }, {\n    cells: [\"Blend SrcFactor DstFactor\", \"开启并设置混合模式\"]\n  }])), mdx(\"br\", null), \"//\\u53EF\\u80FD\\u6709\\u591A\\u4E2A Pass. unity\\u987A\\u5E8F\\u6267\\u884C Pass\", mdx(\"br\", null), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, mdx(Quote, {\n    id: \"#6\",\n    mdxType: \"Quote\"\n  }, \"Pass\")), \"{\", mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, mdx(Quote, {\n    id: \"#10\",\n    mdxType: \"Quote\"\n  }, \"// \\u8BE5pass\\u7684\\u540D\\u5B57\"), mdx(\"br\", null), \"Name \\\"PASSNAME\\\"\", mdx(\"br\", null), mdx(\"br\", null), \"// pass\\u7684\\u6807\\u7B7E, \\u540C\\u6837\\u662F\\u952E\\u503C\\u5BF9\", mdx(\"br\", null), mdx(Expansion, {\n    mdxType: \"Expansion\"\n  }, \"Tags\"), mdx(Tab, {\n    expan: true,\n    mdxType: \"Tab\"\n  }, mdx(Table, {\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"类型\", \"说明\"],\n    component: ['th', 'th']\n  }, {\n    cells: [\"LightMode\", \"定义该Pass在渲染流水线的角色\"]\n  }, {\n    cells: [mdx(Quote, {\n      id: \"#11\",\n      mdxType: \"Quote\"\n    }, \"RequireOptions\"), \"用于指定满足条件才渲染该Pass. 条件由空格分割\"]\n  }, {\n    cells: [\"UsePass\", \"复用其它shader文件中的Pass. 值是其它Pass的Name\"]\n  }, {\n    cells: [\"GarbPass\", \"该Pass负责截取屏幕并储存在一张纹理中, 用于后续处理\"]\n  }])), mdx(\"br\", null), \"//\\u7EB9\\u7406\\u8BBE\\u7F6E, \\u53EA\\u6709\\u5728 fixed function shader \\u624D\\u53EF\\u7528\", mdx(\"br\", null), \"[Texture Setup]\", mdx(\"br\", null), mdx(\"br\", null), \"CGPROGRAM\", mdx(Tab, {\n    mdxType: \"Tab\"\n  }, \"//\\u8C03\\u7528CG\\u8BED\\u8A00\"), \"ENDCG\"), \"}\"), mdx(\"p\", null, \"}\"), mdx(\"br\", null), \"SubShader{\", mdx(\"br\", null), \"}\", mdx(\"br\", null), mdx(\"br\", null), \"//\\u6B64\\u5904\\u7684\\u4EE3\\u7801\\u5E94\\u5BF9\\u6240\\u6709GPU\\u90FD\\u652F\\u6301\", mdx(\"br\", null), \"Fallback \\\"name\\\"|Off\", mdx(\"br\", null), mdx(\"br\", null), \"//\\u5BF9shader\\u4E2D\\u7684\\u547D\\u4EE4\\u8FDB\\u884C\\u5206\\u7EC4(\\u6CA1\\u4EC0\\u4E48\\u5375\\u7528)\", mdx(\"br\", null), \"Category{}\"), \"}\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"bug调试\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"BUG\\u8C03\\u8BD5:\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#bug%E8%B0%83%E8%AF%95\",\n    \"aria-label\": \"bug调试 permalink\",\n    \"className\": \"anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(Tab, {\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.unity3d.com/Manual/SL-DebuggingD3D11ShadersWithVS.html\"\n  }, \"VS\\u4E2D\\u7684Graphics Debugger\")), mdx(\"p\", null, \"Unity\\u4E2D\\u7684Frame Debugger(Window->Frame Debugger)\"), mdx(\"p\", null, \"Intel GPA, RenderDoc, NVIDIA NSight\")), mdx(\"br\", null), mdx(Naviagtion, {\n    desc: \"\\u56FA\\u5B9A\\u51FD\\u6570\\u7740\\u8272\\u5668\\u8BED\\u6CD5(Fixed Function shader)\",\n    to: \"./shader1.0\",\n    mdxType: \"Naviagtion\"\n  }), mdx(\"br\", null), mdx(Naviagtion, {\n    desc: \"\\u9876\\u70B9/\\u7247\\u5143\\u7740\\u8272\\u5668(CG)\\u8BED\\u6CD5(Vertex/Fragment shader)\",\n    to: \"./shader2.0\",\n    mdxType: \"Naviagtion\"\n  }), mdx(\"br\", null), mdx(Naviagtion, {\n    desc: \"\\u8868\\u9762\\u7740\\u8272\\u5668\\u8BED\\u6CD5(Surface shader)\",\n    to: \"./shader3.0\",\n    mdxType: \"Naviagtion\"\n  }), mdx(\"br\", null), mdx(Naviagtion, {\n    desc: \"shaderLab\\u4E0ECG\\u7684\\u8054\\u7CFB\\u4E0E\\u533A\\u522B\",\n    to: \"./shaderLab&CG\",\n    mdxType: \"Naviagtion\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Graphics Programming(四) —— Shader语法","tags":["graphics"]},"fields":{"slug":"/graphics/shaderSyntax","templateTag":"graphics"},"exports":{"QuoteList":["shader名字显示在Inspector中. 类似于\"Custom/Shader\"的会出现在材质面板中的Shader->Custom->Shader","属性, 类似c#的public字段. Properties仅仅是为了在面板中展示字段, 其中的定义与赋值可以在任何内容中写","2D贴图的 \" \" 内 可选择: white, red, bump, black 或 空字符串","3D纹理只能用脚本创建, 且 OpenGL3.0 以上才支持","相当于main函数. 而当当前显卡不支持时就会报错. 单独出错则跳过, 全部出错跳转到Fallback","每个 Pass 引起一次渲染流水线","#7未使用","渲染设置, 如颜色混合等. 也可以在Pass中设置. 在这里设置适用于所有Pass","这里所写的所有标签key值是SubShader独有的. Pass中无法设置","名字应该全为大写字符(因为Unity自动将小写转为大写)","5.3时Unity只支持: SoftVegetation"],"ImgList":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/graphics"},"frontmatter":{"title":"Graphics Programming(一) —— 渲染流水线","index":1}}},{"node":{"fields":{"slug":"/graphics/priorKnowledge"},"frontmatter":{"title":"Graphics Programming(二) —— 前置知识","index":2}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis"},"frontmatter":{"title":"Graphics Programming(三) —— 编写shader的数学基础","index":3}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis/innerMatrix"},"frontmatter":{"title":"内置的变量: inner matrix","index":3.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax"},"frontmatter":{"title":"Graphics Programming(四) —— Shader语法","index":4}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader1.0"},"frontmatter":{"title":"固定函数着色器: Fixed Function Shader","index":4.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader2.0"},"frontmatter":{"title":"顶点/片元着色器: Vertex/Fragment Shader","index":4.2}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader3.0"},"frontmatter":{"title":"表面着色器: Surface Shader","index":4.3}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shaderLab&CG"},"frontmatter":{"title":"shaderLab和CG的联系与区别","index":4.4}}},{"node":{"fields":{"slug":"/graphics/illumination"},"frontmatter":{"title":"Graphics Programming(五) —— 光照","index":5}}},{"node":{"fields":{"slug":"/graphics/texture"},"frontmatter":{"title":"Graphics Programming(六) —— 纹理","index":6}}},{"node":{"fields":{"slug":"/graphics/transparency"},"frontmatter":{"title":"Graphics Programming(七) —— 透明效果","index":7}}},{"node":{"fields":{"slug":"/graphics/simpleAnimation"},"frontmatter":{"title":"Graphics Programming(八) —— 简单动画","index":8}}},{"node":{"fields":{"slug":"/graphics/post-processing"},"frontmatter":{"title":"Graphics Programming(九) —— 后期处理效果","index":9}}},{"node":{"fields":{"slug":"/graphics/particularRendering"},"frontmatter":{"title":"Graphics Programming(十) —— 特殊渲染","index":10}}}]}},"pageContext":{"frontmatter":{"title":"Graphics Programming(四) —— Shader语法","tags":["graphics"],"index":4},"title":"Graphics Programming(四) —— Shader语法","date":null,"slug":"/graphics/shaderSyntax","genByTemplate":"graphics"}},"staticQueryHashes":["2763354658","3649515864","49750724","63159454"]}