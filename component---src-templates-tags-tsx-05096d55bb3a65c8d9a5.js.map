{"version":3,"file":"component---src-templates-tags-tsx-05096d55bb3a65c8d9a5.js","mappings":"kKAKMA,GAAWC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAQ,CAClCC,SAAU,CACRC,OAAQ,UACRC,QAAS,YACTC,aAAc,EAEd,MAAO,CACLC,MAAO,iBAGT,UAAW,CACT,MAAO,CACLA,MAAO,iBAETC,gBAAiB,gBA8DvB,UAzDwD,SAAC,GAGlD,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,KAEQC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,OAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAITK,EAAUhB,IAEViB,EAAWC,EAAAA,SACf,kBACEL,EAAMM,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,KACX,EAAsBA,EAAKC,OAAnBC,KAAAA,OAAR,MAAe,GAAf,EACMC,EAASD,EAAgBE,MAAM,QAAU,GAC/CD,EAAME,QACNF,EAAME,QACN,IAAQC,EAAUN,EAAKO,YAAfD,MACR,OACE,sBAAIE,IAAKN,EAAMO,UAAWb,EAAQb,UAC/BoB,EAAMJ,KAAI,SAACjB,EAAQ4B,GAClB,OACE,wBACEF,IAAG,IAAME,EACTC,MAAO,CAAEC,MAAM,MAAQC,QAAQ,qBAIrC,gBAAC,EAAAC,KAAD,CAAMC,GAAOb,EAAL,KAAeI,SAI/B,CAACb,IAGH,OACE,gBAAC,IAAD,CACEuB,KAAM,CACJL,MAAO,CACLM,cAAc,YAIlB,0BAAKtB,GACL,sBACEgB,MAAO,CACLO,UAAU,SAGXrB","sources":["webpack://gatsby-blog/./src/templates/tags.tsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\n\nconst useTheme = makeStyles((_) => ({\n  listItem: {\n    margin: \"0.2em 0\",\n    padding: \"0.4em 1em\",\n    borderRadius: 4,\n\n    \"&>a\": {\n      color: \"rgb(17,24,39)\",\n    },\n\n    \"&:hover\": {\n      \"&>a\": {\n        color: \"rgb(55,65,81)\",\n      },\n      backgroundColor: \"#e8eaee\",\n    },\n  },\n}));\n\nconst Tags: React.FC<{ pageContext: any; data: any }> = ({\n  pageContext,\n  data,\n}) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMdx;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  const classes = useTheme();\n\n  const memoList = React.useMemo(\n    () =>\n      edges.map(({ node }: any) => {\n        const { slug = \"\" } = node.fields;\n        const depth = (slug as string).match(/\\//g) || [];\n        depth.shift();\n        depth.shift();\n        const { title } = node.frontmatter;\n        return (\n          <li key={slug} className={classes.listItem}>\n            {depth.map((_: any, i) => {\n              return (\n                <span\n                  key={`_${i}`}\n                  style={{ width: `1em`, display: `inline-block` }}\n                ></span>\n              );\n            })}\n            <Link to={`${slug}/`}>{title}</Link>\n          </li>\n        );\n      }),\n    [edges]\n  );\n\n  return (\n    <Layout\n      main={{\n        style: {\n          flexDirection: `column`,\n        },\n      }}\n    >\n      <h1>{tagHeader}</h1>\n      <ul\n        style={{\n          listStyle: `none`,\n        }}\n      >\n        {memoList}\n      </ul>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: {\n        fields: [frontmatter___index, frontmatter___date, fileAbsolutePath]\n        order: ASC\n      }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["useTheme","makeStyles","_","listItem","margin","padding","borderRadius","color","backgroundColor","pageContext","data","tag","allMdx","edges","totalCount","tagHeader","classes","memoList","React","map","node","fields","slug","depth","match","shift","title","frontmatter","key","className","i","style","width","display","Link","to","main","flexDirection","listStyle"],"sourceRoot":""}