{"version":3,"sources":["webpack:///./src/templates/haskell.js"],"names":["Template","fluid","data","mdx","headerIamge","logoIamge","frontmatter","body","fields","title","slug","templateTag","header","style","backgroundImage","childImageSharp","src","backgroundSize","children","to","display","color","marginLeft","flexDirection","alt","originalName","replace","fontSize","width","presentationWidth","height","presentationHeight","filter","config","titleTemplate","className","tags"],"mappings":"4FAAA,oIAmCe,SAASA,EAAT,GAA6B,IA5BrBC,EA4BYC,EAAQ,EAARA,KACzBC,EAAgCD,EAAhCC,IAAKC,EAA2BF,EAA3BE,YAAaC,EAAcH,EAAdG,UAClBC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACvBC,EACFD,EAAOE,OAAP,IAAoBF,EAAOG,YAA3B,mBAEIL,EAAYG,MAClB,OACE,kBAAC,IAAD,CACEG,OAAQ,CACNC,MAAO,CACLC,gBAAgB,OAAQV,EAAYW,gBAAgBd,MAAMe,IAA3C,IACfC,eAAe,SAEjBC,UA1CejB,EA0CSI,EAAUU,gBAAgBd,MAvCtD,kBAAC,OAAD,CAAMkB,GAAG,iBACP,yBACEN,MAAO,CACLO,QAAQ,cACRC,MAAM,OACNC,WAAW,OACXC,cAAc,WAGhB,yBACEC,IAAKvB,EAAMwB,aAAaC,QAAQ,OAAQ,IACxCV,IAAKf,EAAMe,IACXH,MAAO,CACLc,SAAS,OACTC,MAhBW,MAgBD3B,EAAM4B,kBAAX,KACLC,OAjBW,MAiBA7B,EAAM8B,mBAAX,KACNC,OAAO,kCAGX,wFAuBF,kBAAC,IAAD,CACEvB,MAAOA,EACPwB,OAAQ,CACNC,cACE1B,EAAOE,OAAP,IAAoBF,EAAOG,YAA3B,gCAKN,yBAAKwB,UAAU,gBACb,4BAAK7B,EAAYG,OAEjB,kBAAC,IAAD,CAAU2B,KAAM9B,EAAY8B,OAC5B,kBAAC,cAAD,KAAc7B","file":"component---src-templates-haskell-js-d7191298f50d2678a9c4.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport TagsList from \"../components/tag-lists\";\n\nfunction HaskellHeader(fluid) {\n  const resizeWeight = 0.5625;\n  return (\n    <Link to=\"/tags/haskell\">\n      <div\n        style={{\n          display: `inline-flex`,\n          color: `#fff`,\n          marginLeft: `5rem`,\n          flexDirection: `column`,\n        }}\n      >\n        <img\n          alt={fluid.originalName.replace(\".png\", \"\")}\n          src={fluid.src}\n          style={{\n            fontSize: `45px`,\n            width: `${fluid.presentationWidth * resizeWeight}px`,\n            height: `${fluid.presentationHeight * resizeWeight}px`,\n            filter: `hue-rotate(180deg) invert(1)`,\n          }}\n        />\n        <h6>An advanced, purely functional programming language</h6>\n      </div>\n    </Link>\n  );\n}\n\nexport default function Template({ data }) {\n  const { mdx, headerIamge, logoIamge } = data;\n  const { frontmatter, body, fields } = mdx;\n  let title =\n    fields.slug === `/${fields.templateTag}`\n      ? `LearnYouAHaskell`\n      : frontmatter.title;\n  return (\n    <Layout\n      header={{\n        style: {\n          backgroundImage: `url(${headerIamge.childImageSharp.fluid.src})`,\n          backgroundSize: `cover`,\n        },\n        children: HaskellHeader(logoIamge.childImageSharp.fluid),\n      }}\n    >\n      <SEO\n        title={title}\n        config={{\n          titleTemplate:\n            fields.slug === `/${fields.templateTag}`\n              ? `%s`\n              : `%s | LearnYouAHaskell`,\n        }}\n      ></SEO>\n      <div className=\"haskell-post\">\n        <h1>{frontmatter.title}</h1>\n        {/* <h2>{frontmatter.date}</h2> */}\n        <TagsList tags={frontmatter.tags} />\n        <MDXRenderer>{body}</MDXRenderer>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        date\n        title\n        tags\n      }\n      fields {\n        slug\n        templateTag\n      }\n    }\n\n    headerIamge: file(relativePath: { eq: \"haskell-header.png\" }) {\n      childImageSharp {\n        fluid(fit: COVER, pngQuality: 100) {\n          src\n        }\n      }\n    }\n\n    logoIamge: file(relativePath: { eq: \"haskell-logo.png\" }) {\n      childImageSharp {\n        fluid(fit: COVER, pngQuality: 100) {\n          src\n          presentationHeight\n          presentationWidth\n          originalName\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}