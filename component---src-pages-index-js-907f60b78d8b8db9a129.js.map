{"version":3,"sources":["webpack://gatsby-website/./src/components/image.js","webpack://gatsby-website/./src/raw/pun.js","webpack://gatsby-website/./src/pages/index.js"],"names":["Image","path","ext","otherProps","image","useStaticQuery","images","edges","find","node","relativePath","G","getImage","alt","defaultProps","prototype","PropTypes","lists","TODO","PROCESSING","data","title","site","siteMetadata","config","titleTemplate","style","margin","width","maxWidth","marginBottom","display","flexDirection","Object","keys","map","key","length","color","fontWeight","toUpperCase","padding","paddingLeft","backgroundColor","puns","pun","substring"],"mappings":"qMAgBMA,EAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAQC,GAAiB,YAexCC,GAdOC,oBAAe,cAcTC,OAAOC,MAAMC,MAC9B,SAACJ,GAAD,OAAWA,EAAMK,KAAKC,eAAoBT,EAA/B,IAAuCC,KAEpD,OAAOE,WAAOK,KACZ,gBAAC,EAAAE,EAAD,eAAaP,OAAOQ,OAASR,aAAD,EAACA,EAAOK,OAAWN,EAA/C,CAA2DU,IAAKZ,KAEhE,sDAC2BA,EAD3B,IACkCC,IAKtCF,EAAMc,aAAe,CACnBb,KAAM,mBACNC,IAAK,OAGPF,EAAMe,UAAY,CAChBd,KAAMe,sBACNd,IAAKc,YAGP,O,2HC9CA,EAPa,CACX,2CACA,wCACA,2DACA,iECGIC,EAAQ,CACZC,KAAM,GACNC,WAAY,IAsEd,EAnEkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAOD,EAAKE,KAAKC,aAAaF,MAC9BG,OAAQ,CAAEC,cAAc,QAE1B,uBAAKC,MAAO,CAAEC,OAAO,SAAWC,MAAM,UACpC,uBACEF,MAAO,CAAEC,OAAO,SAAWE,SAAS,QAAUC,aAAa,YAE3D,gBAAC,IAAD,CAAO7B,KAAK,iBAEd,uBAAKyB,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC3CC,OAAOC,KAAKjB,GAAOkB,KAAI,SAACC,GACvB,OACEnB,EAAMmB,GAAKC,OAAS,GAClB,wBACEX,MAAO,CACLY,MAAM,kBACNC,WAAY,IACZZ,OAAO,UAETS,IAAKA,GAEDA,EAAII,cARV,cAcR,uBACEd,MAAO,CACLC,OAAQ,eACRc,QAAS,OACTC,YAAa,MACbC,gBAAiB,YAGlBC,OAAS,SAACC,GACT,IAAMT,EAAMS,EAAIC,UAAU,EAAG,IAC7B,OACE,8BACEpB,MAAO,CACLY,MAAO,iBACPX,OAAQ,SAEVS,IAAKA,GAEJS","file":"component---src-pages-index-js-907f60b78d8b8db9a129.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = ({ path, ext, ...otherProps }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      images: allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              gatsbyImageData(formats: [AUTO, WEBP, AVIF])\n            }\n          }\n        }\n      }\n    }\n  `);\n  const image = data.images.edges.find(\n    (image) => image.node.relativePath === `${path}.${ext}`\n  );\n  return image?.node ? (\n    <GatsbyImage image={getImage(image?.node)} {...otherProps} alt={path} />\n  ) : (\n    <div>\n      Not Found this image at {path}.{ext}\n    </div>\n  );\n};\n\nImage.defaultProps = {\n  path: \"gatsby-astronaut\",\n  ext: \"png\",\n};\n\nImage.prototype = {\n  path: PropTypes.string.isRequired,\n  ext: PropTypes.string,\n};\n\nexport default Image;\n","const puns = [\n  \"The world is Complex, so it is not Real.\",\n  \"We use TypeScript as any as possible.\",\n  \"月薪3千的骂美国，月薪3万的学美国，月薪30万的自己移民去美国，月薪300万的，自己好好在国内，全家全部在美国。\",\n  \"Across the Great Wall we can reach every corner in the world.\",\n];\n\nexport default puns;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Image from \"../components/image\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport puns from \"../raw/pun\";\n\nconst lists = {\n  TODO: [],\n  PROCESSING: [],\n};\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO\n      title={data.site.siteMetadata.title}\n      config={{ titleTemplate: `%s` }}\n    />\n    <div style={{ margin: `0 auto`, width: `980px` }}>\n      <div\n        style={{ margin: `0 auto`, maxWidth: `300px`, marginBottom: `1.45rem` }}\n      >\n        <Image path=\"gatsby-icon\" />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {Object.keys(lists).map((key) => {\n          return (\n            lists[key].length > 0 && (\n              <span\n                style={{\n                  color: `rgba(0,0,0,.75)`,\n                  fontWeight: 700,\n                  margin: `1rem 0`,\n                }}\n                key={key}\n              >\n                {`${key.toUpperCase()} List:`}\n              </span>\n            )\n          );\n        })}\n      </div>\n      <div\n        style={{\n          margin: \"1em .5em 0 0\",\n          padding: \".5em\",\n          paddingLeft: \"1em\",\n          backgroundColor: \"#f1f1f1\",\n        }}\n      >\n        {puns.map((pun) => {\n          const key = pun.substring(0, 15);\n          return (\n            <blockquote\n              style={{\n                color: \"rgba(0,0,0,.5)\",\n                margin: \"4px 0\",\n              }}\n              key={key}\n            >\n              {pun}\n            </blockquote>\n          );\n        })}\n      </div>\n    </div>\n  </Layout>\n);\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}