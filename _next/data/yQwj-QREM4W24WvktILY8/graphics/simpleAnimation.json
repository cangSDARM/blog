{"pageProps":{"post":{"matter":{"title":"Graphics Programming(八) —— 简单动画","tags":["graphics"],"index":8},"absPath":"/home/runner/work/blog/blog/renderer/mdx/graphics/simpleAnimation.mdx","type":"mdx","slug":["simpleAnimation"],"collection":"graphics","url":"/graphics/simpleAnimation"},"compiled":{"content":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst frontmatter = {\n  \"title\": \"Graphics Programming(八) —— 简单动画\",\n  \"tags\": [\"graphics\"],\n  \"index\": 8\n};\nconst QuoteList = [\"例如在广告牌技术中, 为避免使用模型空间来作锚点, 可以利用顶点颜色来存储每个顶点到锚点的距离值\"];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  }, {Aphorism, Expansion, Quote, Tab, Table} = _components;\n  if (!Aphorism) _missingMdxReference(\"Aphorism\", true);\n  if (!Expansion) _missingMdxReference(\"Expansion\", true);\n  if (!Quote) _missingMdxReference(\"Quote\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Aphorism, {\n      children: \"动画 = 数学计算函数f(时间变量t)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如何动起来:\"\n    }), \"\\n\", _jsxs(Tab, {\n      children: [_jsx(Expansion, {\n        children: \"时间变量\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"用shader的动画效果一般是将时间变量加入计算. 以便当时间变化时画面也随之变化\", _jsx(\"br\", {}), \"unity所有的内置时间变量都是float4类型\", _jsx(Table, {\n          title: \"unity内置的时间变量\",\n          children: [{\n            cells: [\"名称\", \"t的含义\", \"描述\"],\n            component: ['th', 'th', 'th']\n          }, {\n            cells: [\"_Time\", \"自该场景加载开始所经过的时间\", \"(t/20, t, 2t, 3t)\"]\n          }, {\n            cells: [\"_SinTime\", \"时间的正弦值\", \"(t/8, t/4, t/2, t)\"]\n          }, {\n            cells: [\"_CosTime\", \"时间的余弦值\", \"(t/8, t/4, t/2, t)\"]\n          }, {\n            cells: [\"unity_DeltaTime\", \"时间的增量\", \"(t, 1/t, smooth(t), 1/smooth(t))\"]\n          }]\n        })]\n      })]\n    }), \"\\n\", _jsx(\"p\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"纹理动画:\"\n    }), \"\\n\", _jsxs(Tab, {\n      children: [_jsx(Expansion, {\n        children: \"序列帧动画\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"序列帧动画(Image Sequence Animation): 通过播放连续的序列帧来实现动画\", _jsx(\"br\", {}), \"注意: unity中纹理坐标竖直方向顺序(从下到上逐渐增大)和通常序列帧顺序(从上到下)相反.\"]\n      }), _jsx(Expansion, {\n        children: \"滚动背景\"\n      }), \":\", _jsx(Tab, {\n        expan: true,\n        children: \"滚动背景通常使用多个layer来模拟视差\"\n      })]\n    }), \"\\n\", _jsx(\"p\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"顶点动画:\"\n    }), \"\\n\", _jsxs(Tab, {\n      children: [_jsx(Expansion, {\n        children: \"注意事项\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"顶点动画往往不得不在SubShader中写\\\"DisableBatching\\\"=\\\"True\\\"标签来强制取消批处理, 但增加Draw Call.\", _jsx(\"br\", {}), \"其中最应避免的是利用模型空间下的绝对位置和方向计算, \", _jsx(Quote, {\n          id: \"#1\",\n          children: \"应尽量使用其它方式代替\"\n        }), \".\", _jsx(\"br\", {}), \"顶点动画的物体添加阴影也需要自己提供ShadowCaster Pass.\"]\n      }), _jsx(Expansion, {\n        children: \"河流\"\n      }), \":\", _jsx(Tab, {\n        expan: true,\n        children: \"河流模拟通常使用正弦函数模拟水流波动\"\n      }), _jsx(Expansion, {\n        children: \"广告牌技术\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"广告牌技术(Billboarding): 根据视角旋转特定对象, 使得该对象总是面对摄像机\", _jsx(\"br\", {}), \"本质为构建旋转矩阵. 该矩阵的基通常为: 表面法线, 上方向单位向量, 右方向单位向量. 且需要锚点保持物体位置不变\", _jsx(\"br\", {}), \"而三个基向量通常不垂直. 但实现时至少有一个是固定的.\", _jsx(\"br\", {}), \"假设表面法线固定(粒子效果等): 计算: normalized(right = up x normal); 修正: up = normal x right\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  frontmatter,\n  QuoteList,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","toc":[]},"overview":[{"length":22,"name":"archive"},{"length":15,"name":"graphics"},{"length":1,"name":"math"},{"length":8,"name":"network"}]},"__N_SSG":true}