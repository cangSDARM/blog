{"pageProps":{"post":{"matter":{"title":"shaderLab和CG的联系与区别","tags":["graphics"],"index":4.4},"absPath":"/home/runner/work/blog/blog/renderer/mdx/graphics/shaderSyntax/shaderLab&CG.mdx","type":"mdx","slug":["shaderSyntax","shaderLab&CG"],"collection":"graphics","url":"/graphics/shaderSyntax/shaderLab&CG"},"compiled":{"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst title = \"shaderLab和CG的联系与区别\", tags = [\"graphics\"], index = 4.4;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components), {Navigation, Table} = _components;\n  if (!Navigation) _missingMdxReference(\"Navigation\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Navigation, {\n      desc: \"返回\",\n      to: \"./\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"--------------------------------------------------------------------------------------------------------\"\n    }), \"\\n\", _jsx(Table, {\n      title: \"语法的联系&区别\",\n      children: [{\n        cells: [\"\", \"ShaderLab\", \"CG\"],\n        cellStyle: {\n          textAlign: \"center\"\n        }\n      }, {\n        cells: [\"对Properties的调用\", \"Color[propertyName]\", \"fixed4 propertyName(propertyName.rgb)\"],\n        component: [\"th\"]\n      }, {\n        cells: [\"行尾\", \"不需要分号\", \"需要分号\"],\n        component: [\"th\"]\n      }, {\n        cells: [\"函数\", \"不能自定义, 只有功能的开关\", \"可以自定义, 但主要函数不能省略\"],\n        component: [\"th\"]\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"--------------------------------------------------------------------------------------------------------\"\n    }), \"\\n\", _jsx(Table, {\n      title: \"ShaderLab属性类型和CG变量类型的关系\",\n      children: [{\n        cells: [\"ShaderLab\", \"CG\"],\n        cellStyle: {\n          fontSize: 20,\n          textAlign: 'center'\n        }\n      }, {\n        cells: [\"Color, Vector\", \"float4, half4, fixed4\"]\n      }, {\n        cells: [\"Range, Float\", \"float, half, fixed4\"]\n      }, {\n        cells: [\"2D\", \"sampler2D\"]\n      }, {\n        cells: [\"Cube\", \"samplerCube\"]\n      }, {\n        cells: [\"3D\", \"sampler3D\"]\n      }]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  title,\n  tags,\n  index,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","toc":[]},"overview":[{"length":21,"name":"archive"},{"length":15,"name":"graphics"},{"length":1,"name":"math"},{"length":8,"name":"network"}]},"__N_SSG":true}