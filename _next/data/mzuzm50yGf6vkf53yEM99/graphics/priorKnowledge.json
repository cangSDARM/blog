{"pageProps":{"post":{"matter":{"title":"Graphics Programming(二) —— 前置知识","tags":["graphics"],"index":2},"absPath":"/home/runner/work/blog/blog/renderer/mdx/graphics/priorKnowledge.mdx","type":"mdx","slug":["priorKnowledge"],"collection":"graphics","url":"/graphics/priorKnowledge"},"compiled":{"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst title = \"Graphics Programming(二) —— 前置知识\", tags = [\"graphics\"], index = 2;\nconst QuoteList = [\"包含在 GLSLPROGRAM ... ENDGLSL 语法块内\", \"包含在 CGPROGRAM ... ENDCG 语法块内\", \"包含在 CGPROGRAM ... ENDCG 语法块内\", \"并没有学到. 详情参考官网的Compute Shader: https//docs.unity3d.com/Manual/ComputeShaders.html\"];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h4: \"h4\",\n    a: \"a\",\n    svg: \"svg\",\n    path: \"path\"\n  }, props.components), {Tab, Quote, Expansion, Table} = _components;\n  if (!Expansion) _missingMdxReference(\"Expansion\", true);\n  if (!Quote) _missingMdxReference(\"Quote\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h4, {\n      id: \"shader作用\",\n      children: [\"shader作用:\", _jsx(_components.a, {\n        className: \"anchor after\",\n        \"aria-hidden\": true,\n        \"aria-label\": \"permalink\",\n        tabIndex: \"-1\",\n        href: \"#shader作用\",\n        children: _jsx(_components.svg, {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          focusable: \"false\",\n          children: _jsx(_components.path, {\n            d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\",\n            fillRule: \"evenodd\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsx(Tab, {\n      children: \"决定\\\"材质\\\"和\\\"灯光\\\"如何相互作用\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"shader语言\",\n      children: [\"shader语言:\", _jsx(_components.a, {\n        className: \"anchor after\",\n        \"aria-hidden\": true,\n        \"aria-label\": \"permalink\",\n        tabIndex: \"-1\",\n        href: \"#shader语言\",\n        children: _jsx(_components.svg, {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          focusable: \"false\",\n          children: _jsx(_components.path, {\n            d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\",\n            fillRule: \"evenodd\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(Tab, {\n      children: [\"OpenGL\", _jsxs(Tab, {\n        children: [_jsx(Quote, {\n          id: \"#1\",\n          children: \"GLSL\"\n        }), \": opengl shader lauguage\"]\n      }), \"DiretX\", _jsxs(Tab, {\n        children: [_jsx(Quote, {\n          id: \"#2\",\n          children: \"HLSL\"\n        }), \": high level shader lauguage\"]\n      }), \"CG\", _jsxs(Tab, {\n        children: [_jsx(Quote, {\n          id: \"#3\",\n          children: \"CG\"\n        }), \": C of Graphic\"]\n      }), \"Unity\", _jsx(Tab, {\n        children: \"ShaderLab\"\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"unity-shader\",\n      children: [\"unity shader\", _jsx(_components.a, {\n        className: \"anchor after\",\n        \"aria-hidden\": true,\n        \"aria-label\": \"permalink\",\n        tabIndex: \"-1\",\n        href: \"#unity-shader\",\n        children: _jsx(_components.svg, {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          focusable: \"false\",\n          children: _jsx(_components.path, {\n            d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\",\n            fillRule: \"evenodd\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(Tab, {\n      children: [_jsx(Expansion, {\n        children: \"shader版本\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"fixed function shader:\", _jsx(Tab, {\n          children: \"shader 1.0\\n开关式, 不可控制\"\n        }), \"shader 2.0:\", _jsx(Tab, {\n          children: \"功能可定制\"\n        }), \"surface shader:\", _jsx(Tab, {\n          children: \"前两个的封装\"\n        })]\n      }), _jsx(Expansion, {\n        children: \"shader分类\"\n      }), \":\", _jsx(Tab, {\n        expan: true,\n        children: _jsx(Table, {\n          children: [{\n            cells: [\"Standard Surface Shader\", \"包含了标准光照模型(基于物理的渲染)的表面着色器模板\"],\n            component: ['th']\n          }, {\n            cells: [\"Unlit Shader\", \"不包含光照(但有雾效)的基本顶点/片元着色器\"],\n            component: ['th']\n          }, {\n            cells: [\"Image Effect Shader\", \"包含各种屏幕后期处理效果的基本模板\"],\n            component: ['th']\n          }, {\n            cells: [_jsx(Quote, {\n              id: \"#4\",\n              children: \"Compute Shader\"\n            }), \"包含利用GPU的并行性来经行与常规流水线无关的计算\"],\n            component: ['th']\n          }]\n        })\n      }), _jsx(Expansion, {\n        children: \"shader导入面版\"\n      }), \":\", _jsxs(Tab, {\n        expan: true,\n        children: [\"Defalut Maps: 指定默认纹理\", _jsx(\"br\", {}), \"\\nCompile and show code: 显示对于不同接口生成的代码和最终生成的汇编指令\", _jsx(\"br\", {}), \"\\nShow generated code: 显示顶点/片元着色器代码\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  title,\n  tags,\n  index,\n  QuoteList,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","toc":[{"depth":4,"value":"shader作用:","id":"shader作用"},{"depth":4,"value":"shader语言:","id":"shader语言"},{"depth":4,"value":"unity shader","id":"unity-shader"}]},"overview":[{"length":20,"name":"archive"},{"length":15,"name":"graphics"},{"length":1,"name":"math"},{"length":8,"name":"network"}]},"__N_SSG":true}