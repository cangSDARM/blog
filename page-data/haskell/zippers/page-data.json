{"componentChunkName":"component---src-templates-haskell-js","path":"/haskell/zippers/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2018-02-7\",\n  \"title\": \"Monad进阶\",\n  \"tags\": [\"haskell\"],\n  \"excerpt\": \"xixx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5C3D\\u7BA1 Haskell \\u7684\\u7EAF\\u7CB9\\u6027\\u8D28\\u5E26\\u6765\\u5F88\\u591A\\u597D\\u5904\\uFF0C\\u4F46\\u4ED6\\u8BA9\\u4E00\\u4E9B\\u5728\\u975E\\u7EAF\\u7CB9\\u8BED\\u8A00\\u5F88\\u5BB9\\u6613\\u5904\\u7406\\u7684\\u4E00\\u4E9B\\u4E8B\\u60C5\\u53D8\\u5F97\\u8981\\u7528\\u53E6\\u4E00\\u79CD\\u65B9\\u6CD5\\u89E3\\u51B3\\u3002\\u7531\\u4E8E referential transparency\\uFF0C\\u540C\\u6837\\u4E00\\u4EF6\\u4E8B\\u5728 Haskell \\u4E2D\\u662F\\u6CA1\\u6709\\u5206\\u522B\\u7684\\u3002\\u6240\\u4EE5\\u5982\\u679C\\u6211\\u4EEC\\u6709\\u4E00\\u4E2A\\u88C5\\u6EE1 5 \\u7684\\u6811\\uFF0C\\u800C\\u6211\\u4EEC\\u5E0C\\u671B\\u628A\\u5176\\u4E2D\\u4E00\\u4E2A\\u6362\\u6210 6\\uFF0C\\u90A3\\u6211\\u4EEC\\u5FC5\\u987B\\u8981\\u77E5\\u9053\\u6211\\u4EEC\\u7A76\\u7ADF\\u662F\\u60F3\\u6539\\u53D8\\u54EA\\u4E2A 5\\u3002\\u6211\\u4EEC\\u4E5F\\u5FC5\\u987B\\u77E5\\u9053\\u6211\\u4EEC\\u8EAB\\u5904\\u5728\\u8FD9\\u68F5\\u6811\\u7684\\u54EA\\u91CC\\u3002\\u4F46\\u5728 Haskell \\u4E2D\\uFF0C\\u6BCF\\u4E2A 5 \\u90FD\\u957F\\u5F97\\u4E00\\u6837\\uFF0C\\u6211\\u4EEC\\u5E76\\u4E0D\\u80FD\\u56E0\\u4E3A\\u4ED6\\u4EEC\\u5728\\u8BB0\\u5FC6\\u4F53\\u4E2D\\u7684\\u4F4D\\u5740\\u4E0D\\u540C\\u5C31\\u628A\\u4ED6\\u4EEC\\u533A\\u5206\\u5F00\\u6765\\u3002\\u6211\\u4EEC\\u4E5F\\u4E0D\\u80FD\\u6539\\u53D8\\u4EFB\\u4F55\\u72B6\\u6001\\uFF0C\\u5F53\\u6211\\u4EEC\\u60F3\\u8981\\u6539\\u53D8\\u4E00\\u68F5\\u6811\\u7684\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u5B9E\\u9645\\u4E0A\\u662F\\u8BF4\\u6211\\u4EEC\\u8981\\u4E00\\u68F5\\u65B0\\u7684\\u6811\\uFF0C\\u53EA\\u662F\\u4ED6\\u957F\\u5F97\\u5F88\\u50CF\\u65E7\\u7684\\u3002\\u4E00\\u79CD\\u89E3\\u51B3\\u65B9\\u5F0F\\u662F\\u8BB0\\u4F4F\\u4E00\\u6761\\u4ECE\\u6839\\u8282\\u70B9\\u5230\\u73B0\\u5728\\u8FD9\\u4E2A\\u8282\\u70B9\\u7684\\u8DEF\\u5F84\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u8FD9\\u6837\\u8868\\u8FBE\\uFF1A\\u7ED9\\u5B9A\\u4E00\\u68F5\\u6811\\uFF0C\\u5148\\u5F80\\u5DE6\\u8D70\\uFF0C\\u518D\\u5F80\\u53F3\\u8D70\\uFF0C\\u518D\\u5F80\\u5DE6\\u8D70\\uFF0C\\u7136\\u540E\\u6539\\u53D8\\u4F60\\u8D70\\u5230\\u7684\\u5143\\u7D20\\u3002\\u867D\\u7136\\u8FD9\\u662F\\u53EF\\u884C\\u7684\\uFF0C\\u4F46\\u8FD9\\u975E\\u5E38\\u6CA1\\u6709\\u6548\\u7387\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u63A5\\u8FDE\\u6539\\u53D8\\u4E00\\u4E2A\\u5728\\u9644\\u8FD1\\u7684\\u8282\\u70B9\\uFF0C\\u6211\\u4EEC\\u5FC5\\u987B\\u518D\\u4ECE\\u6839\\u8282\\u70B9\\u8D70\\u4E00\\u6B21\\u3002\\u5728\\u8FD9\\u4E2A\\u7AE0\\u8282\\u4E2D\\uFF0C\\u6211\\u4EEC\\u4F1A\\u770B\\u5230\\u6211\\u4EEC\\u53EF\\u4EE5\\u96C6\\u4E2D\\u6CE8\\u610F\\u5728\\u67D0\\u4E2A\\u8D44\\u6599\\u7ED3\\u6784\\u4E0A\\uFF0C\\u8FD9\\u6837\\u8BA9\\u6539\\u53D8\\u8D44\\u6599\\u7ED3\\u6784\\u8DDF\\u904D\\u5386\\u7684\\u52A8\\u4F5C\\u975E\\u5E38\\u6709\\u6548\\u7387\\u3002\"), mdx(\"p\", null, \"\\u6765\\u8D70\\u4E8C\\u5143\\u6811\\u5427!\\n\\u6211\\u4EEC\\u5728\\u751F\\u7269\\u8BFE\\u4E2D\\u5B66\\u8FC7\\uFF0C\\u6811\\u6709\\u975E\\u5E38\\u591A\\u79CD\\u3002\\u6240\\u4EE5\\u6211\\u4EEC\\u6765\\u81EA\\u5DF1\\u53D1\\u660E\\u68F5\\u6811\\u5427\\uFF01\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data Tree a = Empty | Node a (Tree a) (Tree a) deriving (Show)\")), mdx(\"p\", null, \"\\u8FD9\\u8FB9\\u6211\\u4EEC\\u7684\\u6811\\u4E0D\\u662F\\u7A7A\\u7684\\u5C31\\u662F\\u6709\\u4E24\\u68F5\\u5B50\\u6811\\u3002\\u6765\\u770B\\u770B\\u4E00\\u4E2A\\u8303\\u4F8B\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"freeTree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Char\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"freeTree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \"   \\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'P'\"), \"  \\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'O'\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'L'\"), \"  \\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'N'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'T'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'Y'\"), \"  \\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'S'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'A'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'L'\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'W'\"), \"  \\n                  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'C'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n                  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'R'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'A'\"), \"  \\n                  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'A'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n                  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'C'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Empty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n             \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \"))), mdx(\"p\", null, \"\\u753B\\u6210\\u56FE\\u7684\\u8BDD\\u5C31\\u662F\\u50CF\\u8FD9\\u6837\\uFF1A\"), mdx(\"p\", null, \"\\u6CE8\\u610F\\u5230 W \\u8FD9\\u4E2A\\u8282\\u70B9\\u4E86\\u5417\\uFF1F\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u8981\\u628A\\u4ED6\\u53D8\\u6210 P\\u3002\\u6211\\u4EEC\\u4F1A\\u600E\\u4E48\\u505A\\u5462\\uFF1F\\u4E00\\u79CD\\u65B9\\u5F0F\\u662F\\u7528 pattern match \\u7684\\u65B9\\u5F0F\\u505A\\uFF0C\\u76F4\\u5230\\u6211\\u4EEC\\u627E\\u5230\\u90A3\\u4E2A\\u8282\\u70B9\\u4E3A\\u6B62\\u3002\\u8981\\u5148\\u5F80\\u53F3\\u8D70\\u518D\\u5F80\\u5DE6\\u8D70\\uFF0C\\u518D\\u6539\\u53D8\\u5143\\u7D20\\u5185\\u5BB9\\uFF0C\\u50CF\\u662F\\u8FD9\\u6837\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Char\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Char\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"y\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"m\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"y\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'P'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"m\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"\\u8FD9\\u4E0D\\u53EA\\u770B\\u8D77\\u6765\\u5F88\\u4E11\\uFF0C\\u800C\\u4E14\\u5F88\\u4E0D\\u5BB9\\u6613\\u9605\\u8BFB\\u3002\\u8FD9\\u5230\\u5E95\\u662F\\u600E\\u4E48\\u56DE\\u4E8B\\uFF1F\\u6211\\u4EEC\\u4F7F\\u7528 pattern match \\u6765\\u62C6\\u5F00\\u6211\\u4EEC\\u7684\\u6811\\uFF0C\\u6211\\u4EEC\\u628A root \\u7ED1\\u5B9A\\u6210 x\\uFF0C\\u628A\\u5DE6\\u5B50\\u6811\\u7ED1\\u5B9A\\u6210 l\\u3002\\u5BF9\\u4E8E\\u53F3\\u5B50\\u6811\\u6211\\u4EEC\\u7EE7\\u7EED\\u4F7F\\u7528 pattern match\\u3002\\u76F4\\u5230\\u6211\\u4EEC\\u78B0\\u5230\\u4E00\\u4E2A\\u5B50\\u6811\\u4ED6\\u7684 root \\u662F 'W'\\u3002\\u5230\\u6B64\\u4E3A\\u6B62\\u6211\\u4EEC\\u518D\\u91CD\\u5EFA\\u6574\\u68F5\\u6811\\uFF0C\\u65B0\\u7684\\u6811\\u53EA\\u5DEE\\u5728\\u628A 'W' \\u6539\\u6210\\u4E86 'P'\\u3002\"), mdx(\"p\", null, \"\\u6709\\u6CA1\\u6709\\u6BD4\\u8F83\\u597D\\u7684\\u4F5C\\u6CD5\\u5462\\uFF1F\\u6709\\u4E00\\u79CD\\u4F5C\\u6CD5\\u662F\\u6211\\u4EEC\\u5199\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u4ED6\\u63A5\\u53D7\\u4E00\\u4E2A\\u6811\\u8DDF\\u4E00\\u4E32 list\\uFF0C\\u91CC\\u9762\\u5305\\u542B\\u6709\\u884C\\u8D70\\u6574\\u4E2A\\u6811\\u65F6\\u7684\\u65B9\\u5411\\u3002\\u65B9\\u5411\\u53EF\\u4EE5\\u662F L \\u6216\\u662F R\\uFF0C\\u5206\\u522B\\u4EE3\\u8868\\u5411\\u5DE6\\u8D70\\u6216\\u5411\\u53F3\\u8D70\\u3002\\u6211\\u4EEC\\u53EA\\u8981\\u8DDF\\u968F\\u6307\\u4EE4\\u5C31\\u53EF\\u4EE5\\u8D70\\u8FBE\\u6307\\u5B9A\\u7684\\u4F4D\\u7F6E\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"data\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Direction\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"L\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"|\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"R\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"deriving\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Show\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"type\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Directions\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Direction\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"  \\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Directions\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Char\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Char\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"L\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"R\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"changeToP\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token char\"\n  }), \"'P'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), \"  \"))), mdx(\"p\", null, \"\\u5982\\u679C\\u5728 list \\u4E2D\\u7684\\u7B2C\\u4E00\\u4E2A\\u5143\\u7D20\\u662F L\\uFF0C\\u6211\\u4EEC\\u4F1A\\u5EFA\\u6784\\u4E00\\u4E2A\\u5DE6\\u5B50\\u6811\\u53D8\\u6210 'P' \\u7684\\u65B0\\u6811\\u3002\\u5F53\\u6211\\u4EEC\\u9012\\u56DE\\u5730\\u547C\\u53EB changeToP\\uFF0C\\u6211\\u4EEC\\u53EA\\u4F1A\\u4F20\\u7ED9\\u4ED6\\u5269\\u4E0B\\u7684\\u90E8\\u4EFD\\uFF0C\\u56E0\\u4E3A\\u524D\\u9762\\u7684\\u90E8\\u4EFD\\u5DF2\\u7ECF\\u770B\\u8FC7\\u4E86\\u3002\\u5BF9\\u4E8E R \\u7684 case \\u4E5F\\u4E00\\u6837\\u3002\\u5982\\u679C list \\u5DF2\\u7ECF\\u6D88\\u8017\\u5B8C\\u4E86\\uFF0C\\u90A3\\u8868\\u793A\\u6211\\u4EEC\\u5DF2\\u7ECF\\u8D70\\u5230\\u6211\\u4EEC\\u7684\\u76EE\\u7684\\u5730\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u5C31\\u56DE\\u4F20\\u4E00\\u4E2A\\u65B0\\u7684\\u6811\\uFF0C\\u4ED6\\u7684 root \\u88AB\\u4FEE\\u6539\\u6210 'P'\\u3002\"), mdx(\"p\", null, \"\\u8981\\u907F\\u514D\\u5370\\u51FA\\u6574\\u68F5\\u6811\\uFF0C\\u6211\\u4EEC\\u8981\\u5199\\u4E00\\u4E2A\\u51FD\\u6570\\u544A\\u8BC9\\u6211\\u4EEC\\u76EE\\u7684\\u5730\\u7A76\\u7ADF\\u662F\\u4EC0\\u4E48\\u5143\\u7D20\\u3002\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Directions\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"L\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"R\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ds\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"elemAt\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \"))), mdx(\"p\", null, \"\\u8FD9\\u51FD\\u6570\\u8DDF changeToP \\u5F88\\u50CF\\uFF0C\\u53EA\\u662F\\u4ED6\\u4E0D\\u4F1A\\u8BB0\\u4E0B\\u6CBF\\u8DEF\\u4E0A\\u7684\\u8D44\\u8BAF\\uFF0C\\u4ED6\\u53EA\\u4F1A\\u8BB0\\u4F4F\\u76EE\\u7684\\u5730\\u662F\\u4EC0\\u4E48\\u3002\\u6211\\u4EEC\\u628A 'W' \\u53D8\\u6210 'P'\\uFF0C\\u7136\\u540E\\u7528\\u4ED6\\u6765\\u67E5\\u770B\\u3002\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"shell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-shell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"ghci\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"let\"), \" newTree \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" changeToP \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"R,L\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" freeTree  \\nghci\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" elemAt \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"R,L\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" newTree  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'P'\")))), mdx(\"p\", null, \"\\u770B\\u8D77\\u6765\\u8FD0\\u4F5C\\u6B63\\u5E38\\u3002\\u5728\\u8FD9\\u4E9B\\u51FD\\u6570\\u91CC\\u9762\\uFF0C\\u5305\\u542B\\u65B9\\u5411\\u7684 list \\u6BD4\\u8F83\\u50CF\\u662F\\u4E00\\u79CD\\\"focus\\\"\\uFF0C\\u56E0\\u4E3A\\u4ED6\\u7279\\u522B\\u6307\\u51FA\\u4E86\\u4E00\\u68F5\\u5B50\\u6811\\u3002\\u4E00\\u4E2A\\u50CF \", \"[R]\", \" \\u8FD9\\u6837\\u7684 list \\u662F\\u805A\\u7126\\u5728 root \\u7684\\u53F3\\u5B50\\u6811\\u3002\\u4E00\\u4E2A\\u7A7A\\u7684 list \\u4EE3\\u8868\\u7684\\u662F\\u4E3B\\u6811\\u672C\\u8EAB\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u6280\\u5DE7\\u770B\\u8D77\\u6765\\u9177\\u70AB\\uFF0C\\u4F46\\u5374\\u4E0D\\u592A\\u6709\\u6548\\u7387\\uFF0C\\u7279\\u522B\\u662F\\u5728\\u6211\\u4EEC\\u60F3\\u8981\\u91CD\\u590D\\u5730\\u6539\\u53D8\\u5185\\u5BB9\\u7684\\u65F6\\u5019\\u3002\\u5047\\u5982\\u6211\\u4EEC\\u6709\\u4E00\\u4E2A\\u975E\\u5E38\\u5927\\u7684\\u6811\\u4EE5\\u53CA\\u975E\\u5E38\\u957F\\u7684\\u4E00\\u4E32\\u5305\\u542B\\u65B9\\u5411\\u7684 list\\u3002\\u6211\\u4EEC\\u9700\\u8981\\u6CBF\\u7740\\u65B9\\u5411\\u4ECE root \\u4E00\\u76F4\\u8D70\\u5230\\u6811\\u7684\\u5E95\\u90E8\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u8981\\u6539\\u53D8\\u4E00\\u4E2A\\u90BB\\u8FD1\\u7684\\u5143\\u7D20\\uFF0C\\u6211\\u4EEC\\u4ECD\\u9700\\u8981\\u4ECE root \\u5F00\\u59CB\\u8D70\\u5230\\u6811\\u7684\\u5E95\\u90E8\\u3002\\u8FD9\\u5B9E\\u5728\\u4E0D\\u592A\\u4EE4\\u4EBA\\u6EE1\\u610F\\u3002\"), mdx(\"p\", null, \"\\u5728\\u4E0B\\u4E00\\u4E2A\\u7AE0\\u8282\\uFF0C\\u6211\\u4EEC\\u4F1A\\u4ECB\\u7ECD\\u4E00\\u4E2A\\u6BD4\\u8F83\\u597D\\u7684\\u65B9\\u6CD5\\uFF0C\\u8BA9\\u6211\\u4EEC\\u53EF\\u4EE5\\u6709\\u6548\\u7387\\u5730\\u6539\\u53D8\\u6211\\u4EEC\\u7684 focus\\u3002\"), mdx(\"p\", null, \"\\u51E1\\u8D70\\u8FC7\\u5FC5\\u7559\\u4E0B\\u75D5\\u8FF9\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u9700\\u8981\\u4E00\\u4E2A\\u6BD4\\u5305\\u542B\\u4E00\\u4E32\\u65B9\\u5411\\u7684 list \\u66F4\\u597D\\u7684\\u805A\\u7126\\u7684\\u65B9\\u6CD5\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u80FD\\u591F\\u5728\\u4ECE root \\u8D70\\u5230\\u6307\\u5B9A\\u5730\\u70B9\\u7684\\u6CBF\\u8DEF\\u4E0A\\u6492\\u4E0B\\u4E9B\\u9762\\u5305\\u5C51\\uFF0C\\u6765\\u7EAA\\u5F55\\u6211\\u4EEC\\u7684\\u8DB3\\u8FF9\\u5462\\uFF1F\\u5F53\\u6211\\u4EEC\\u5F80\\u5DE6\\u8D70\\uFF0C\\u6211\\u4EEC\\u4FBF\\u8BB0\\u4F4F\\u6211\\u4EEC\\u9009\\u62E9\\u4E86\\u5DE6\\u8FB9\\uFF0C\\u5F53\\u6211\\u4EEC\\u5F80\\u53F3\\u8D70\\uFF0C\\u4FBF\\u8BB0\\u4F4F\\u6211\\u4EEC\\u9009\\u62E9\\u4E86\\u53F3\\u8FB9\\u3002\"), mdx(\"p\", null, \"\\u8981\\u627E\\u4E2A\\u4E1C\\u897F\\u6765\\u4EE3\\u8868\\u6211\\u4EEC\\u7684\\u9762\\u5305\\u5C51\\uFF0C\\u5C31\\u7528\\u4E00\\u4E32 Direction (\\u4ED6\\u53EF\\u4EE5\\u662F L \\u6216\\u8005\\u662F R)\\uFF0C\\u53EA\\u662F\\u6211\\u4EEC\\u53EB\\u4ED6 BreadCrumb \\u800C\\u4E0D\\u53EB Direction\\u3002\\u8FD9\\u662F\\u56E0\\u4E3A\\u73B0\\u5728\\u6211\\u4EEC\\u628A\\u8FD9\\u4E32 direction \\u53CD\\u8FC7\\u6765\\u770B\\u4E86\\uFF1A\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"type Breadcrumbs = [Direction]\")), mdx(\"p\", null, \"\\u8FD9\\u8FB9\\u6709\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u4ED6\\u63A5\\u53D7\\u4E00\\u68F5\\u6811\\u8DDF\\u4E00\\u4E9B\\u9762\\u5305\\u5C51\\uFF0C\\u5E76\\u5728\\u6211\\u4EEC\\u5F80\\u5DE6\\u8D70\\u65F6\\u5728 list \\u7684\\u524D\\u5934\\u52A0\\u4E0A L\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goLeft\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goLeft\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"L\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"--\\u5FFD\\u7565 root \\u8DDF\\u53F3\\u5B50\\u6811\\uFF0C\\u76F4\\u63A5\\u56DE\\u4F20\\u5DE6\\u5B50\\u6811\\u4EE5\\u53CA\\u9762\\u5305\\u5C51\\uFF0C\\u53EA\\u662F\\u5728\\u73B0\\u6709\\u7684\\u9762\\u5305\\u5C51\\u524D\\u9762\\u52A0\\u4E0A L\\u3002\\u518D\\u6765\\u770B\\u770B\\u5F80\\u53F3\\u8D70\\u7684\\u51FD\\u6570\\uFF1A\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goRight\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goRight\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"R\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \"))), mdx(\"p\", null, \"\\u51E0\\u4E4E\\u662F\\u4E00\\u6A21\\u4E00\\u6837\\u3002\\u6211\\u4EEC\\u518D\\u6765\\u505A\\u4E00\\u4E2A\\u5148\\u5F80\\u53F3\\u8D70\\u518D\\u5F80\\u5DE6\\u8D70\\u7684\\u51FD\\u6570\\uFF0C\\u8BA9\\u4ED6\\u6765\\u8D70\\u6211\\u4EEC\\u7684 freeTree\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"shell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-shell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"ghci\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" goLeft \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"goRight \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"freeTree, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"))\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'W'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'C'\"), \" Empty Empty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'R'\"), \" Empty Empty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \",\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"L,R\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \"))), mdx(\"p\", null, \"\\u73B0\\u5728\\u6211\\u4EEC\\u6709\\u4E86\\u4E00\\u68F5\\u6811\\uFF0C\\u4ED6\\u7684 root \\u662F 'W'\\uFF0C\\u800C\\u4ED6\\u7684\\u5DE6\\u5B50\\u6811\\u7684 root \\u662F 'C'\\uFF0C\\u53F3\\u5B50\\u6811\\u7684 root \\u662F 'R'\\u3002\\u800C\\u7531\\u4E8E\\u6211\\u4EEC\\u5148\\u5F80\\u53F3\\u8D70\\u518D\\u5F80\\u5DE6\\u8D70\\uFF0C\\u6240\\u4EE5\\u9762\\u5305\\u5C51\\u662F \", \"[L,R]\", \"\\u3002\"), mdx(\"p\", null, \"\\u8981\\u518D\\u8868\\u793A\\u5F97\\u66F4\\u6E05\\u695A\\u4E9B\\uFF0C\\u6211\\u4EEC\\u80FD\\u7528\\u5B9A\\u4E49\\u4E00\\u4E2A -:\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"x -: f = f x\")), mdx(\"p\", null, \"\\u4ED6\\u8BA9\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u503C\\u5582\\u7ED9\\u51FD\\u6570\\u8FD9\\u4EF6\\u4E8B\\u53CD\\u8FC7\\u6765\\u5199\\uFF0C\\u5148\\u5199\\u503C\\uFF0C\\u518D\\u6765\\u662F -:\\uFF0C\\u6700\\u540E\\u662F\\u51FD\\u6570\\u3002\\u6240\\u4EE5\\u6211\\u4EEC\\u53EF\\u4EE5\\u5199\\u6210 (freeTree, []) -: goRight \\u800C\\u4E0D\\u662F goRight (freeTree, [])\\u3002\\u6211\\u4EEC\\u4FBF\\u53EF\\u4EE5\\u628A\\u4E0A\\u9762\\u7684\\u4F8B\\u5B50\\u6539\\u5199\\u5730\\u66F4\\u6E05\\u695A\\u3002\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"shell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-shell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"ghci\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"freeTree, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" -: goRight -: goLeft  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'W'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'C'\"), \" Empty Empty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Node \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'R'\"), \" Empty Empty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \",\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"L,R\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \"))), mdx(\"p\", null, \"Going back up\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u8981\\u5F80\\u56DE\\u4E0A\\u8D70\\u56DE\\u6211\\u4EEC\\u539F\\u6765\\u7684\\u8DEF\\u5F84\\u5462\\uFF1F\\u6839\\u636E\\u7559\\u4E0B\\u7684\\u9762\\u5305\\u5C51\\uFF0C\\u6211\\u4EEC\\u77E5\\u9053\\u73B0\\u5728\\u7684\\u6811\\u662F\\u4ED6\\u7236\\u4EB2\\u7684\\u5DE6\\u5B50\\u6811\\uFF0C\\u800C\\u4ED6\\u7684\\u7236\\u4EB2\\u662F\\u7956\\u7236\\u7684\\u53F3\\u5B50\\u6811\\u3002\\u8FD9\\u4E9B\\u8D44\\u8BAF\\u5E76\\u4E0D\\u8DB3\\u591F\\u6211\\u4EEC\\u5F80\\u56DE\\u8D70\\u3002\\u770B\\u8D77\\u6765\\u8981\\u8FBE\\u5230\\u8FD9\\u4EF6\\u4E8B\\u60C5\\uFF0C\\u6211\\u4EEC\\u9664\\u4E86\\u5355\\u7EAF\\u7EAA\\u5F55\\u65B9\\u5411\\u4E4B\\u5916\\uFF0C\\u8FD8\\u5FC5\\u987B\\u628A\\u5176\\u4ED6\\u7684\\u8D44\\u6599\\u90FD\\u8BB0\\u5F55\\u4E0B\\u6765\\u3002\\u5728\\u8FD9\\u4E2A\\u6848\\u4F8B\\u4E2D\\uFF0C\\u4E5F\\u5C31\\u662F\\u4ED6\\u7684\\u7236\\u4EB2\\u4EE5\\u53CA\\u4ED6\\u7684\\u53F3\\u5B50\\u6811\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u822C\\u6765\\u8BF4\\uFF0C\\u5355\\u5355\\u4E00\\u4E2A\\u9762\\u5305\\u5C51\\u6709\\u8DB3\\u591F\\u7684\\u8D44\\u8BAF\\u8BA9\\u6211\\u4EEC\\u91CD\\u5EFA\\u7236\\u4EB2\\u7684\\u8282\\u70B9\\u3002\\u6240\\u4EE5\\u4ED6\\u5E94\\u8BE5\\u8981\\u5305\\u542B\\u6240\\u6709\\u6211\\u4EEC\\u6CA1\\u6709\\u9009\\u62E9\\u7684\\u8DEF\\u5F84\\u7684\\u8D44\\u8BAF\\uFF0C\\u5E76\\u4E14\\u4ED6\\u5E94\\u8BE5\\u8981\\u7EAA\\u5F55\\u6211\\u4EEC\\u6CBF\\u8DEF\\u8D70\\u7684\\u65B9\\u5411\\u3002\\u540C\\u65F6\\u4ED6\\u4E0D\\u5E94\\u8BE5\\u5305\\u542B\\u6211\\u4EEC\\u73B0\\u5728\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u3002\\u56E0\\u4E3A\\u90A3\\u68F5\\u5B50\\u6811\\u5DF2\\u7ECF\\u5728 tuple \\u7684\\u7B2C\\u4E00\\u4E2A\\u90E8\\u4EFD\\u4E2D\\uFF0C\\u5982\\u679C\\u6211\\u4EEC\\u4E5F\\u628A\\u4ED6\\u7EAA\\u5F55\\u5728\\u9762\\u5305\\u5C51\\u91CC\\uFF0C\\u90A3\\u5C31\\u4F1A\\u6709\\u91CD\\u590D\\u7684\\u8D44\\u8BAF\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u6765\\u4FEE\\u6539\\u4E00\\u4E0B\\u6211\\u4EEC\\u9762\\u5305\\u5C51\\u7684\\u5B9A\\u4E49\\uFF0C\\u8BA9\\u4ED6\\u5305\\u542B\\u6211\\u4EEC\\u4E4B\\u524D\\u4E22\\u6389\\u7684\\u8D44\\u8BAF\\u3002\\u6211\\u4EEC\\u5B9A\\u4E49\\u4E00\\u4E2A\\u65B0\\u7684\\u578B\\u6001\\uFF0C\\u800C\\u4E0D\\u7528 Direction\\uFF1A\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data Crumb a = LeftCrumb a (Tree a) | RightCrumb a (Tree a) deriving (Show)\")), mdx(\"p\", null, \"\\u6211\\u4EEC\\u7528 LeftCrumb \\u6765\\u5305\\u542B\\u6211\\u4EEC\\u6CA1\\u6709\\u8D70\\u7684\\u53F3\\u5B50\\u6811\\uFF0C\\u800C\\u4E0D\\u4EC5\\u4EC5\\u53EA\\u5199\\u4E2A L\\u3002\\u6211\\u4EEC\\u7528 RightCrumb \\u6765\\u5305\\u542B\\u6211\\u4EEC\\u6CA1\\u6709\\u8D70\\u7684\\u5DE6\\u5B50\\u6811\\uFF0C\\u800C\\u4E0D\\u4EC5\\u4EC5\\u53EA\\u5199\\u4E2A R\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u4E9B\\u9762\\u5305\\u5C51\\u5305\\u542B\\u4E86\\u6240\\u6709\\u91CD\\u5EFA\\u6811\\u6240\\u9700\\u8981\\u7684\\u8D44\\u8BAF\\u3002\\u4ED6\\u4EEC\\u50CF\\u662F\\u8F6F\\u789F\\u4E00\\u6837\\u5B58\\u4E86\\u8BB8\\u591A\\u6211\\u4EEC\\u7684\\u8DB3\\u8FF9\\uFF0C\\u800C\\u4E0D\\u4EC5\\u4EC5\\u53EA\\u662F\\u65B9\\u5411\\u800C\\u5DF2\\u3002\"), mdx(\"p\", null, \"\\u5927\\u81F4\\u4E0A\\u53EF\\u4EE5\\u628A\\u6BCF\\u4E2A\\u9762\\u5305\\u5C51\\u60F3\\u50CF\\u6210\\u4E00\\u4E2A\\u6811\\u7684\\u8282\\u70B9\\uFF0C\\u6811\\u7684\\u8282\\u70B9\\u6709\\u4E00\\u4E2A\\u6D1E\\u3002\\u5F53\\u6211\\u4EEC\\u5F80\\u6811\\u7684\\u66F4\\u6DF1\\u5C42\\u8D70\\uFF0C\\u9762\\u5305\\u5C51\\u643A\\u5E26\\u6709\\u6211\\u4EEC\\u6240\\u6709\\u8D70\\u8FC7\\u5F97\\u6240\\u6709\\u8D44\\u8BAF\\uFF0C\\u53EA\\u9664\\u4E86\\u76EE\\u524D\\u6211\\u4EEC\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u3002\\u4ED6\\u4E5F\\u5FC5\\u987B\\u7EAA\\u5F55\\u6D1E\\u5728\\u54EA\\u91CC\\u3002\\u5728 LeftCrumb \\u7684\\u6848\\u4F8B\\u4E2D\\uFF0C\\u6211\\u4EEC\\u77E5\\u9053\\u6211\\u4EEC\\u662F\\u5411\\u5DE6\\u8D70\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u7F3A\\u5C11\\u7684\\u4FBF\\u662F\\u5DE6\\u5B50\\u6811\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u4E5F\\u8981\\u628A Breadcrumbs \\u7684 type synonym \\u6539\\u6389\\uFF1A\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"type Breadcrumbs a = [Crumb a]\")), mdx(\"p\", null, \"\\u63A5\\u7740\\u6211\\u4EEC\\u4FEE\\u6539 goLeft \\u8DDF goRight \\u6765\\u7EAA\\u5F55\\u4E00\\u4E9B\\u6211\\u4EEC\\u6CA1\\u8D70\\u8FC7\\u7684\\u8DEF\\u5F84\\u7684\\u8D44\\u8BAF\\u3002\\u4E0D\\u50CF\\u6211\\u4EEC\\u4E4B\\u524D\\u9009\\u62E9\\u5FFD\\u7565\\u4ED6\\u3002goLeft \\u50CF\\u662F\\u8FD9\\u6837\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goLeft\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Tree\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Breadcrumbs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"goLeft\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Node\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"LeftCrumb\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"x\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"r\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"\\u4F60\\u53EF\\u4EE5\\u770B\\u5230\\u8DDF\\u4E4B\\u524D\\u7248\\u672C\\u7684 goLeft \\u5F88\\u50CF\\uFF0C\\u4E0D\\u53EA\\u662F\\u5C06 L \\u63A8\\u5230 list \\u7684\\u6700\\u524D\\u7AEF\\uFF0C\\u6211\\u4EEC\\u8FD8\\u52A0\\u5165 LeftCrumb \\u6765\\u8868\\u793A\\u6211\\u4EEC\\u9009\\u62E9\\u5411\\u5DE6\\u8D70\\u3002\\u800C\\u4E14\\u6211\\u4EEC\\u5728 LeftCrumb \\u91CC\\u9762\\u585E\\u6709\\u6211\\u4EEC\\u4E4B\\u524D\\u8D70\\u7684\\u8282\\u70B9\\uFF0C\\u4EE5\\u53CA\\u6211\\u4EEC\\u9009\\u62E9\\u4E0D\\u8D70\\u7684\\u53F3\\u5B50\\u6811\\u7684\\u8D44\\u8BAF\\u3002\"), mdx(\"p\", null, \"\\u8981\\u6CE8\\u610F\\u8FD9\\u4E2A\\u51FD\\u6570\\u4F1A\\u5047\\u8BBE\\u6211\\u4EEC\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u5E76\\u4E0D\\u662F Empty\\u3002\\u4E00\\u4E2A\\u7A7A\\u7684\\u6811\\u5E76\\u6CA1\\u6709\\u4EFB\\u4F55\\u5B50\\u6811\\uFF0C\\u6240\\u4EE5\\u5982\\u679C\\u6211\\u4EEC\\u9009\\u62E9\\u5728\\u4E00\\u4E2A\\u7A7A\\u7684\\u6811\\u4E2D\\u5411\\u5DE6\\u8D70\\uFF0C\\u5C31\\u4F1A\\u56E0\\u4E3A\\u6211\\u4EEC\\u5BF9 Node \\u505A\\u6A21\\u5F0F\\u5339\\u914D\\u800C\\u4EA7\\u751F\\u9519\\u8BEF\\u3002\\u6211\\u4EEC\\u6CA1\\u6709\\u5904\\u7406 Empty \\u7684\\u60C5\\u51B5\\u3002\"), mdx(\"p\", null, \"goRight \\u4E5F\\u662F\\u7C7B\\u4F3C\\uFF1A\"), mdx(\"p\", null, \"goRight :: (Tree a, Breadcrumbs a) -> (Tree a, Breadcrumbs a)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goRight (Node x l r, bs) = (r, RightCrumb x l:bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u5728\\u4E4B\\u524D\\u6211\\u4EEC\\u53EA\\u80FD\\u5411\\u5DE6\\u6216\\u5411\\u53F3\\u8D70\\uFF0C\\u73B0\\u5728\\u6211\\u4EEC\\u7531\\u4E8E\\u7EAA\\u5F55\\u4E86\\u5173\\u4E8E\\u7236\\u8282\\u70B9\\u7684\\u8D44\\u8BAF\\u4EE5\\u53CA\\u6211\\u4EEC\\u9009\\u62E9\\u4E0D\\u8D70\\u7684\\u8DEF\\u7684\\u8D44\\u8BAF\\uFF0C\\u800C\\u83B7\\u5F97\\u5411\\u4E0A\\u8D70\\u7684\\u80FD\\u529B\\u3002\\u6765\\u770B\\u770B goUp \\u51FD\\u6570\\uFF1A\"), mdx(\"p\", null, \"goUp :: (Tree a, Breadcrumbs a) -> (Tree a, Breadcrumbs a)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, LeftCrumb x r:bs) = (Node x t r, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, RightCrumb x l:bs) = (Node x l t, bs)  \"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u9501\\u5B9A\\u4E86 t \\u8FD9\\u68F5\\u6811\\u5E76\\u68C0\\u67E5\\u6700\\u65B0\\u7684 Crumb\\u3002\\u5982\\u679C\\u4ED6\\u662F LeftCrumb\\uFF0C\\u90A3\\u6211\\u4EEC\\u5C31\\u5EFA\\u7ACB\\u4E00\\u68F5\\u65B0\\u7684\\u6811\\uFF0C\\u5176\\u4E2D t \\u662F\\u4ED6\\u7684\\u5DE6\\u5B50\\u6811\\u5E76\\u7528\\u5173\\u4E8E\\u6211\\u4EEC\\u6CA1\\u8D70\\u8FC7\\u5F97\\u53F3\\u5B50\\u6811\\u7684\\u8D44\\u8BAF\\u6765\\u586B\\u5199\\u5176\\u4ED6 Node \\u7684\\u8D44\\u8BAF\\u3002\\u7531\\u4E8E\\u6211\\u4EEC\\u4F7F\\u7528\\u4E86\\u9762\\u5305\\u5C51\\u7684\\u8D44\\u8BAF\\u6765\\u5EFA\\u7ACB\\u7236\\u5B50\\u6811\\uFF0C\\u6240\\u4EE5\\u65B0\\u7684 list \\u79FB\\u9664\\u4E86\\u6211\\u4EEC\\u7684\\u9762\\u5305\\u5C51\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6211\\u4EEC\\u5DF2\\u7ECF\\u5728\\u6811\\u7684\\u9876\\u7AEF\\u5E76\\u4F7F\\u7528\\u8FD9\\u4E2A\\u51FD\\u6570\\u7684\\u8BDD\\uFF0C\\u4ED6\\u4F1A\\u5F15\\u53D1\\u9519\\u8BEF\\u3002\\u7B49\\u4E00\\u4F1A\\u6211\\u4EEC\\u4F1A\\u7528 Maybe \\u6765\\u8868\\u8FBE\\u53EF\\u80FD\\u5931\\u8D25\\u7684\\u60C5\\u51B5\\u3002\"), mdx(\"p\", null, \"\\u6709\\u4E86 Tree a \\u8DDF Breadcrumbs a\\uFF0C\\u6211\\u4EEC\\u5C31\\u6709\\u8DB3\\u591F\\u7684\\u8D44\\u8BAF\\u6765\\u91CD\\u5EFA\\u6574\\u68F5\\u6811\\uFF0C\\u5E76\\u4E14\\u9501\\u5B9A\\u5176\\u4E2D\\u4E00\\u68F5\\u5B50\\u6811\\u3002\\u8FD9\\u79CD\\u65B9\\u5F0F\\u8BA9\\u6211\\u4EEC\\u53EF\\u4EE5\\u8F7B\\u677E\\u7684\\u5F80\\u4E0A\\uFF0C\\u5F80\\u5DE6\\uFF0C\\u5F80\\u53F3\\u8D70\\u3002\\u8FD9\\u6837\\u6210\\u5BF9\\u7684\\u8D44\\u6599\\u7ED3\\u6784\\u6211\\u4EEC\\u53EB\\u505A Zipper\\uFF0C\\u56E0\\u4E3A\\u5F53\\u6211\\u4EEC\\u6539\\u53D8\\u9501\\u5B9A\\u7684\\u65F6\\u5019\\uFF0C\\u4ED6\\u8868\\u73B0\\u5F97\\u5F88\\u50CF\\u662F\\u62C9\\u94FE\\u4E00\\u6837\\u3002\\u6240\\u4EE5\\u6211\\u4EEC\\u4FBF\\u5B9A\\u4E49\\u4E00\\u4E2A type synonym:\"), mdx(\"p\", null, \"type Zipper a = (Tree a, Breadcrumbs a)\\n\\u6211\\u4E2A\\u4EBA\\u662F\\u6BD4\\u8F83\\u503E\\u5411\\u4E8E\\u547D\\u540D\\u6210 Focus\\uFF0C\\u8FD9\\u6837\\u53EF\\u4EE5\\u6E05\\u695A\\u5F3A\\u8C03\\u6211\\u4EEC\\u662F\\u9501\\u5B9A\\u5728\\u5176\\u4E2D\\u4E00\\u90E8\\u5206\\uFF0C \\u81F3\\u4E8E Zipper \\u88AB\\u66F4\\u5E7F\\u6CDB\\u5730\\u4F7F\\u7528\\uFF0C\\u6240\\u4EE5\\u8FD9\\u8FB9\\u4ECD\\u7EF4\\u6301\\u53EB\\u4ED6\\u505A Zipper\\u3002\"), mdx(\"p\", null, \"Manipulating trees under focus\\n\\u73B0\\u5728\\u6211\\u4EEC\\u5177\\u5907\\u4E86\\u79FB\\u52A8\\u7684\\u80FD\\u529B\\uFF0C\\u6211\\u4EEC\\u518D\\u6765\\u5199\\u4E00\\u4E2A\\u6539\\u53D8\\u5143\\u7D20\\u7684\\u51FD\\u6570\\uFF0C\\u4ED6\\u80FD\\u6539\\u53D8\\u6211\\u4EEC\\u76EE\\u524D\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u7684 root\\u3002\"), mdx(\"p\", null, \"modify :: (a -> a) -> Zipper a -> Zipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"modify f (Node x l r, bs) = (Node (f x) l r, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"modify f (Empty, bs) = (Empty, bs)\\n\\u5982\\u679C\\u6211\\u4EEC\\u9501\\u5B9A\\u4E00\\u4E2A\\u8282\\u70B9\\uFF0C\\u6211\\u4EEC\\u7528 f \\u6539\\u53D8\\u4ED6\\u7684 root\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u9501\\u5B9A\\u4E00\\u68F5\\u7A7A\\u7684\\u6811\\uFF0C\\u90A3\\u5C31\\u4EC0\\u4E48\\u4E5F\\u4E0D\\u505A\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u79FB\\u6765\\u79FB\\u53BB\\u5E76\\u8D70\\u5230\\u6211\\u4EEC\\u60F3\\u8981\\u6539\\u53D8\\u7684\\u8282\\u70B9\\uFF0C\\u6539\\u53D8\\u5143\\u7D20\\u540E\\u5E76\\u9501\\u5B9A\\u5728\\u90A3\\u4E2A\\u8282\\u70B9\\uFF0C\\u4E4B\\u540E\\u6211\\u4EEC\\u53EF\\u4EE5\\u5F88\\u65B9\\u4FBF\\u7684\\u79FB\\u4E0A\\u79FB\\u4E0B\\u3002\"), mdx(\"p\", null, \"ghci> let newFocus = modify (\", \"_\", \" -> 'P') (goRight (goLeft (freeTree,[])))\\n\\u6211\\u4EEC\\u5F80\\u5DE6\\u8D70\\uFF0C\\u7136\\u540E\\u5F80\\u53F3\\u8D70\\u5E76\\u5C06 root \\u53D6\\u4EE3\\u4E3A 'P'\\uFF0C\\u7528 -: \\u6765\\u8868\\u8FBE\\u7684\\u8BDD\\u5C31\\u662F\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus = (freeTree,[]) -: goLeft -: goRight -: modify (\", \"_\", \" -> 'P')\\n\\u6211\\u4EEC\\u4E5F\\u80FD\\u5F80\\u4E0A\\u8D70\\u5E76\\u7F6E\\u6362\\u8282\\u70B9\\u4E3A 'X'\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus2 = modify (\", \"_\", \" -> 'X') (goUp newFocus)\\n\\u5982\\u679C\\u6211\\u4EEC\\u7528 -: \\u8868\\u8FBE\\u7684\\u8BDD\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus2 = newFocus -: goUp -: modify (\", \"_\", \" -> 'X')\\n\\u5F80\\u4E0A\\u8D70\\u5F88\\u7B80\\u5355\\uFF0C\\u6BD5\\u7ADF\\u9762\\u5305\\u5C51\\u4E2D\\u542B\\u6709\\u6211\\u4EEC\\u6CA1\\u8D70\\u8FC7\\u7684\\u8DEF\\u5F84\\u7684\\u8D44\\u8BAF\\uFF0C\\u53EA\\u662F\\u91CC\\u9762\\u7684\\u8D44\\u8BAF\\u662F\\u76F8\\u53CD\\u7684\\uFF0C\\u8FD9\\u6709\\u70B9\\u50CF\\u662F\\u8981\\u628A\\u889C\\u5B50\\u53CD\\u8FC7\\u6765\\u624D\\u80FD\\u7528\\u4E00\\u6837\\u3002\\u6709\\u4E86\\u8FD9\\u4E9B\\u8D44\\u8BAF\\uFF0C\\u6211\\u4EEC\\u5C31\\u4E0D\\u7528\\u518D\\u4ECE root \\u5F00\\u59CB\\u8D70\\u4E00\\u904D\\uFF0C\\u6211\\u4EEC\\u53EA\\u8981\\u628A\\u53CD\\u8FC7\\u6765\\u7684\\u6811\\u7FFB\\u8FC7\\u6765\\u5C31\\u597D\\uFF0C\\u7136\\u540E\\u9501\\u5B9A\\u4ED6\\u3002\"), mdx(\"p\", null, \"\\u6BCF\\u4E2A\\u8282\\u70B9\\u6709\\u4E24\\u68F5\\u5B50\\u6811\\uFF0C\\u5373\\u4F7F\\u5B50\\u6811\\u662F\\u7A7A\\u7684\\u4E5F\\u662F\\u89C6\\u4F5C\\u6709\\u6811\\u3002\\u6240\\u4EE5\\u5982\\u679C\\u6211\\u4EEC\\u9501\\u5B9A\\u7684\\u662F\\u4E00\\u68F5\\u7A7A\\u7684\\u5B50\\u6811\\u6211\\u4EEC\\u53EF\\u4EE5\\u505A\\u7684\\u4E8B\\u5C31\\u662F\\u628A\\u4ED6\\u53D8\\u6210\\u975E\\u7A7A\\u7684\\uFF0C\\u4E5F\\u5C31\\u662F\\u53F6\\u8282\\u70B9\\u3002\"), mdx(\"p\", null, \"attach :: Tree a -> Zipper a -> Zipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"attach t (_, bs) = (t, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u63A5\\u53D7\\u4E00\\u68F5\\u6811\\u8DDF\\u4E00\\u4E2A zipper\\uFF0C\\u56DE\\u4F20\\u4E00\\u4E2A\\u65B0\\u7684 zipper\\uFF0C\\u9501\\u5B9A\\u7684\\u76EE\\u6807\\u88AB\\u6362\\u6210\\u4E86\\u63D0\\u4F9B\\u7684\\u6811\\u3002\\u6211\\u4EEC\\u4E0D\\u53EA\\u53EF\\u4EE5\\u7528\\u8FD9\\u62DB\\u628A\\u7A7A\\u7684\\u6811\\u6362\\u6210\\u65B0\\u7684\\u6811\\uFF0C\\u6211\\u4EEC\\u4E5F\\u80FD\\u628A\\u73B0\\u6709\\u7684\\u5B50\\u6811\\u7ED9\\u6362\\u6389\\u3002\\u8BA9\\u6211\\u4EEC\\u6765\\u7528\\u4E00\\u68F5\\u6811\\u6362\\u6389\\u6211\\u4EEC freeTree \\u7684\\u6700\\u5DE6\\u8FB9\\uFF1A\"), mdx(\"p\", null, \"ghci> let farLeft = (freeTree,[]) -: goLeft -: goLeft -: goLeft -: goLeft\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> let newFocus = farLeft -: attach (Node 'Z' Empty Empty)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"newFocus \\u73B0\\u5728\\u9501\\u5B9A\\u5728\\u6211\\u4EEC\\u521A\\u521A\\u63A5\\u4E0A\\u7684\\u6811\\u4E0A\\uFF0C\\u5269\\u4E0B\\u90E8\\u4EFD\\u7684\\u8D44\\u8BAF\\u90FD\\u653E\\u5728\\u9762\\u5305\\u5C51\\u91CC\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u7528 goUp \\u8D70\\u5230\\u6811\\u7684\\u6700\\u4E0A\\u5C42\\uFF0C\\u5C31\\u4F1A\\u5F97\\u5230\\u8DDF\\u539F\\u6765 freeTree \\u5F88\\u50CF\\u7684\\u6811\\uFF0C\\u53EA\\u5DEE\\u5728\\u6700\\u5DE6\\u8FB9\\u591A\\u4E86 'Z'\\u3002\"), mdx(\"p\", null, \"I'm going straight to top, oh yeah, up where the air is fresh and clean!\\n\\u5199\\u4E00\\u4E2A\\u51FD\\u6570\\u8D70\\u5230\\u6811\\u7684\\u6700\\u9876\\u7AEF\\u662F\\u5F88\\u7B80\\u5355\\u7684\\uFF1A\"), mdx(\"p\", null, \"topMost :: Zipper a -> Zipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"topMost (t,[]) = (t,[])\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"topMost z = topMost (goUp z)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u5982\\u679C\\u6211\\u4EEC\\u7684\\u9762\\u5305\\u5C51\\u90FD\\u6CA1\\u4E86\\uFF0C\\u5C31\\u8868\\u793A\\u6211\\u4EEC\\u5DF2\\u7ECF\\u5728\\u6811\\u7684 root\\uFF0C\\u6211\\u4EEC\\u4FBF\\u56DE\\u4F20\\u76EE\\u524D\\u7684\\u9501\\u5B9A\\u76EE\\u6807\\u3002\\u6661\\u7136\\uFF0C\\u6211\\u4EEC\\u4FBF\\u5F80\\u4E0A\\u8D70\\u6765\\u9501\\u5B9A\\u5230\\u7236\\u8282\\u70B9\\uFF0C\\u7136\\u540E\\u9012\\u56DE\\u5730\\u547C\\u53EB topMost\\u3002\\u6211\\u4EEC\\u73B0\\u5728\\u53EF\\u4EE5\\u5728\\u6211\\u4EEC\\u7684\\u6811\\u4E0A\\u56DB\\u5904\\u79FB\\u52A8\\uFF0C\\u547C\\u53EB modify \\u6216 attach \\u8FDB\\u884C\\u6211\\u4EEC\\u8981\\u7684\\u4FEE\\u6539\\u3002\\u6211\\u4EEC\\u7528 topMost \\u6765\\u9501\\u5B9A\\u5230 root\\uFF0C\\u4FBF\\u53EF\\u4EE5\\u6EE1\\u610F\\u5730\\u6B23\\u8D4F\\u6211\\u4EEC\\u7684\\u6210\\u679C\\u3002\"), mdx(\"p\", null, \"\\u6765\\u770B\\u4E32\\u5217\\nZippers \\u51E0\\u4E4E\\u53EF\\u4EE5\\u5957\\u7528\\u5728\\u4EFB\\u4F55\\u8D44\\u6599\\u7ED3\\u6784\\u4E0A\\uFF0C\\u6240\\u4EE5\\u542C\\u5230\\u4ED6\\u53EF\\u4EE5\\u88AB\\u5957\\u7528\\u5728 list \\u4E0A\\u53EF\\u522B\\u592A\\u60CA\\u8BB6\\u3002\\u6BD5\\u7ADF\\uFF0Clist \\u5C31\\u662F\\u6811\\uFF0C\\u53EA\\u662F\\u8282\\u70B9\\u53EA\\u6709\\u4E00\\u4E2A\\u513F\\u5B50\\uFF0C\\u5F53\\u6211\\u4EEC\\u5B9E\\u4F5C\\u6211\\u4EEC\\u81EA\\u5DF1\\u7684 list \\u7684\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u5B9A\\u4E49\\u4E86\\u4E0B\\u9762\\u7684\\u578B\\u6001\\uFF1A\"), mdx(\"p\", null, \"data List a = Empty | Cons a (List a) deriving (Show, Read, Eq, Ord)\"), mdx(\"p\", null, \"\\u8DDF\\u6211\\u4EEC\\u4E8C\\u5143\\u6811\\u7684\\u5B9A\\u4E49\\u6BD4\\u8F83\\uFF0C\\u6211\\u4EEC\\u5C31\\u53EF\\u4EE5\\u770B\\u51FA\\u6211\\u4EEC\\u628A list \\u770B\\u4F5C\\u6811\\u7684\\u539F\\u5219\\u662F\\u6B63\\u786E\\u7684\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u4E32 list \\u50CF\\u662F \", \"[1,2,3]\", \" \\u53EF\\u4EE5\\u88AB\\u5199\\u4F5C 1:2:3:[]\\u3002\\u4ED6\\u7531 list \\u7684 head1 \\u4EE5\\u53CA list \\u7684 tail 2:3:[] \\u7EC4\\u6210\\u3002\\u800C 2:3:[] \\u53C8\\u7531 2 \\u8DDF 3:[] \\u7EC4\\u6210\\u3002\\u81F3\\u4E8E 3:[]\\uFF0C3 \\u662F head \\u800C tail \\u662F []\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u6765\\u5E2E list \\u505A\\u4E2A zipper\\u3002list \\u6539\\u53D8\\u9501\\u5B9A\\u7684\\u65B9\\u5F0F\\u5206\\u4E3A\\u5F80\\u524D\\u8DDF\\u5F80\\u540E\\uFF08tree \\u5206\\u4E3A\\u5F80\\u4E0A\\uFF0C\\u5F80\\u5DE6\\u8DDF\\u5F80\\u53F3\\uFF09\\u3002\\u5728\\u6811\\u7684\\u60C5\\u5F62\\u4E2D\\uFF0C\\u9501\\u5B9A\\u7684\\u90E8\\u4EFD\\u662F\\u4E00\\u68F5\\u5B50\\u6811\\u8DDF\\u7559\\u4E0B\\u7684\\u9762\\u5305\\u5C51\\u3002\\u90A3\\u7A76\\u7ADF\\u5BF9\\u4E8E\\u4E00\\u4E2A list \\u800C\\u8A00\\u4E00\\u4E2A\\u9762\\u5305\\u5C51\\u662F\\u4EC0\\u4E48\\uFF1F\\u5F53\\u6211\\u4EEC\\u5904\\u7406\\u4E8C\\u5143\\u6811\\u7684\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u8BF4\\u9762\\u5305\\u5C51\\u5FC5\\u987B\\u4EE3\\u8868 root \\u7684\\u7236\\u8282\\u70B9\\u8DDF\\u5176\\u4ED6\\u672A\\u8D70\\u8FC7\\u7684\\u5B50\\u6811\\u3002\\u4ED6\\u4E5F\\u5FC5\\u987B\\u8BB0\\u5F97\\u6211\\u4EEC\\u662F\\u5F80\\u5DE6\\u6216\\u5F80\\u53F3\\u8D70\\u3002\\u6240\\u4EE5\\u5FC5\\u987B\\u8981\\u6709\\u9664\\u4E86\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u4EE5\\u5916\\u7684\\u6240\\u6709\\u8D44\\u8BAF\\u3002\"), mdx(\"p\", null, \"list \\u6BD4 tree \\u8981\\u7B80\\u5355\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u4E0D\\u9700\\u8981\\u8BB0\\u4F4F\\u6211\\u4EEC\\u662F\\u5F80\\u5DE6\\u6216\\u5F80\\u53F3\\uFF0C\\u56E0\\u4E3A\\u6211\\u4EEC\\u53EA\\u6709\\u4E00\\u79CD\\u65B9\\u5F0F\\u53EF\\u4EE5\\u5F80 list \\u7684\\u66F4\\u6DF1\\u5C42\\u8D70\\u3002\\u6211\\u4EEC\\u4E5F\\u4E0D\\u9700\\u8981\\u54EA\\u4E9B\\u8DEF\\u5F84\\u6211\\u4EEC\\u6CA1\\u6709\\u8D70\\u8FC7\\u7684\\u8D44\\u8BAF\\u3002\\u4F3C\\u4E4E\\u6211\\u4EEC\\u6240\\u9700\\u8981\\u7684\\u8D44\\u8BAF\\u53EA\\u6709\\u524D\\u4E00\\u4E2A\\u5143\\u7D20\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u7684 list \\u662F\\u50CF \", \"[3,4,5]\", \"\\uFF0C\\u800C\\u4E14\\u6211\\u4EEC\\u77E5\\u9053\\u524D\\u4E00\\u4E2A\\u5143\\u7D20\\u662F 2\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u628A 2 \\u6446\\u56DE list \\u7684 head\\uFF0C\\u6210\\u4E3A \", \"[2,3,4,5]\", \"\\u3002\"), mdx(\"p\", null, \"\\u7531\\u4E8E\\u4E00\\u4E2A\\u5355\\u4E00\\u7684\\u9762\\u5305\\u5C51\\u53EA\\u662F\\u4E00\\u4E2A\\u5143\\u7D20\\uFF0C\\u6211\\u4EEC\\u4E0D\\u9700\\u8981\\u628A\\u4ED6\\u6446\\u8FDB\\u4E00\\u4E2A\\u578B\\u6001\\u91CC\\u9762\\uFF0C\\u5C31\\u50CF\\u6211\\u4EEC\\u5728\\u505A tree zippers \\u65F6\\u4E00\\u6837\\u6446\\u8FDB Crumb\\uFF1A\"), mdx(\"p\", null, \"type ListZipper a = (\", \"[a]\", \",\", \"[a]\", \")\\n\\u7B2C\\u4E00\\u4E2A list \\u4EE3\\u8868\\u73B0\\u5728\\u9501\\u5B9A\\u7684 list\\uFF0C\\u800C\\u7B2C\\u4E8C\\u4E2A\\u4EE3\\u8868\\u9762\\u5305\\u5C51\\u3002\\u8BA9\\u6211\\u4EEC\\u5199\\u4E00\\u4E0B\\u5F80\\u524D\\u8DDF\\u5F80\\u540E\\u8D70\\u7684\\u51FD\\u6570\\uFF1A\"), mdx(\"p\", null, \"goForward :: ListZipper a -> ListZipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goForward (x:xs, bs) = (xs, x:bs)  \"), mdx(\"p\", null, \"goBack :: ListZipper a -> ListZipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goBack (xs, b:bs) = (b:xs, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u5F53\\u5F80\\u524D\\u8D70\\u7684\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u9501\\u5B9A\\u4E86 list \\u7684 tail\\uFF0C\\u800C\\u628A head \\u5F53\\u4F5C\\u662F\\u9762\\u5305\\u5C51\\u3002\\u5F53\\u6211\\u4EEC\\u5F80\\u56DE\\u8D70\\uFF0C\\u6211\\u4EEC\\u628A\\u6700\\u8FD1\\u7684\\u9762\\u5305\\u5C51\\u6B3B\\u6765\\u7136\\u540E\\u6446\\u5230 list \\u7684\\u6700\\u524D\\u5934\\u3002\"), mdx(\"p\", null, \"\\u6765\\u770B\\u770B\\u4E24\\u4E2A\\u51FD\\u6570\\u5982\\u4F55\\u8FD0\\u4F5C\\uFF1A\"), mdx(\"p\", null, \"ghci> let xs = \", \"[1,2,3,4]\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> goForward (xs,[])\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(\", \"[2,3,4]\", \",\", \"[1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> goForward (\", \"[2,3,4]\", \",\", \"[1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(\", \"[3,4]\", \",\", \"[2,1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> goForward (\", \"[3,4]\", \",\", \"[2,1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(\", \"[4]\", \",\", \"[3,2,1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> goBack (\", \"[4]\", \",\", \"[3,2,1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(\", \"[3,4]\", \",\", \"[2,1]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u770B\\u5230\\u5728\\u8FD9\\u4E2A\\u6848\\u4F8B\\u4E2D\\u9762\\u5305\\u5C51\\u53EA\\u4E0D\\u8FC7\\u662F\\u4E00\\u90E8\\u5206\\u53CD\\u8FC7\\u6765\\u7684 list\\u3002\\u6240\\u6709\\u6211\\u4EEC\\u8D70\\u8FC7\\u7684\\u5143\\u7D20\\u90FD\\u88AB\\u4E22\\u8FDB\\u9762\\u5305\\u5C51\\u91CC\\u9762\\uFF0C\\u6240\\u4EE5\\u8981\\u5F80\\u56DE\\u8D70\\u5F88\\u5BB9\\u6613\\uFF0C\\u53EA\\u8981\\u628A\\u8D44\\u8BAF\\u4ECE\\u9762\\u5305\\u5C51\\u91CC\\u9762\\u6361\\u56DE\\u6765\\u5C31\\u597D\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u6837\\u7684\\u5F62\\u5F0F\\u4E5F\\u6BD4\\u8F83\\u5BB9\\u6613\\u770B\\u51FA\\u6211\\u4EEC\\u4E3A\\u4EC0\\u4E48\\u79F0\\u547C\\u4ED6\\u4E3A Zipper\\uFF0C\\u56E0\\u4E3A\\u4ED6\\u771F\\u7684\\u5C31\\u50CF\\u662F\\u62C9\\u94FE\\u4E00\\u822C\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u4F60\\u6B63\\u5728\\u5199\\u4E00\\u4E2A\\u6587\\u5B57\\u7F16\\u8F91\\u5668\\uFF0C\\u90A3\\u4F60\\u53EF\\u4EE5\\u7528\\u4E00\\u4E2A\\u88C5\\u6EE1\\u5B57\\u4E32\\u7684 list \\u6765\\u8868\\u8FBE\\u6BCF\\u4E00\\u884C\\u6587\\u5B57\\u3002\\u4F60\\u4E5F\\u53EF\\u4EE5\\u52A0\\u4E00\\u4E2A Zipper \\u4EE5\\u4FBF\\u77E5\\u9053\\u73B0\\u5728\\u6E38\\u6807\\u79FB\\u52A8\\u5230\\u90A3\\u4E00\\u884C\\u3002\\u6709\\u4E86 Zipper \\u4F60\\u5C31\\u5F88\\u5BB9\\u6613\\u7684\\u53EF\\u4EE5\\u65B0\\u589E\\u6216\\u5220\\u9664\\u73B0\\u6709\\u7684\\u6BCF\\u4E00\\u884C\\u3002\"), mdx(\"p\", null, \"\\u9633\\u6625\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\n\\u7406\\u89E3\\u4E86 Zipper \\u662F\\u5982\\u4F55\\u8FD0\\u4F5C\\u4E4B\\u540E\\uFF0C\\u6211\\u4EEC\\u6765\\u7528\\u4E00\\u68F5\\u6811\\u6765\\u8868\\u8FBE\\u4E00\\u4E2A\\u7B80\\u5355\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\uFF0C\\u7136\\u540E\\u7528\\u4E00\\u4E2A Zipper \\u6765\\u589E\\u5F3A\\u4ED6\\u7684\\u529F\\u80FD\\u3002\\u8BA9\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728\\u8D44\\u6599\\u5939\\u95F4\\u79FB\\u52A8\\uFF0C\\u5C31\\u50CF\\u6211\\u4EEC\\u5E73\\u5E38\\u5BF9\\u6863\\u6848\\u7CFB\\u7EDF\\u7684\\u64CD\\u4F5C\\u4E00\\u822C\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u8FB9\\u6211\\u4EEC\\u91C7\\u7528\\u4E00\\u4E2A\\u6BD4\\u8F83\\u7B80\\u5316\\u7684\\u7248\\u672C\\uFF0C\\u6863\\u6848\\u7CFB\\u7EDF\\u53EA\\u6709\\u6863\\u6848\\u8DDF\\u8D44\\u6599\\u5939\\u3002\\u6863\\u6848\\u662F\\u8D44\\u6599\\u7684\\u57FA\\u672C\\u5355\\u4F4D\\uFF0C\\u53EA\\u662F\\u4ED6\\u6709\\u4E00\\u4E2A\\u540D\\u5B57\\u3002\\u800C\\u8D44\\u6599\\u5939\\u5C31\\u662F\\u7528\\u6765\\u8BA9\\u8FD9\\u4E9B\\u6863\\u6848\\u6BD4\\u8F83\\u6709\\u7ED3\\u6784\\uFF0C\\u5E76\\u4E14\\u80FD\\u5305\\u542B\\u5176\\u4ED6\\u8D44\\u6599\\u5939\\u4E0E\\u6863\\u6848\\u3002\\u6240\\u4EE5\\u8BF4\\u6863\\u6848\\u7CFB\\u7EDF\\u4E2D\\u7684\\u5143\\u4EF6\\u4E0D\\u662F\\u4E00\\u4E2A\\u6863\\u6848\\u5C31\\u662F\\u4E00\\u4E2A\\u8D44\\u6599\\u5939\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u4FBF\\u7528\\u5982\\u4E0B\\u7684\\u65B9\\u6CD5\\u5B9A\\u4E49\\u578B\\u6001\\uFF1A\"), mdx(\"p\", null, \"type Name = String\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"type Data = String\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"data FSItem = File Name Data | Folder Name \", \"[FSItem]\", \" deriving (Show)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u4E00\\u4E2A\\u6863\\u6848\\u662F\\u7531\\u4E24\\u4E2A\\u5B57\\u4E32\\u7EC4\\u6210\\uFF0C\\u4EE3\\u8868\\u4ED6\\u7684\\u540D\\u5B57\\u8DDF\\u4ED6\\u7684\\u5185\\u5BB9\\u3002\\u4E00\\u4E2A\\u8D44\\u6599\\u5939\\u7531\\u4E00\\u4E2A\\u5B57\\u4E32\\u8DDF\\u4E00\\u4E2A list \\u7EC4\\u6210\\uFF0C\\u5B57\\u4E32\\u4EE3\\u8868\\u540D\\u5B57\\uFF0C\\u800C list \\u662F\\u88C5\\u6709\\u7684\\u5143\\u4EF6\\uFF0C\\u5982\\u679C list \\u662F\\u7A7A\\u7684\\uFF0C\\u5C31\\u4EE3\\u8868\\u4ED6\\u662F\\u4E00\\u4E2A\\u7A7A\\u7684\\u8D44\\u6599\\u5939\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u8FB9\\u662F\\u4E00\\u4E2A\\u88C5\\u6709\\u4E9B\\u6863\\u6848\\u4E0E\\u8D44\\u6599\\u5939\\u7684\\u8D44\\u6599\\u5939\\uFF1A\"), mdx(\"p\", null, \"myDisk :: FSItem\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"myDisk =\\nFolder \\\"root\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"[ File \\\"goat_yelling_like_man.wmv\\\" \\\"baaaaaa\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"pope_time.avi\\\" \\\"god bless\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", Folder \\\"pics\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", \"[ File \\\"ape_throwing_up.jpg\\\" \\\"bleargh\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"watermelon_smash.gif\\\" \\\"smash!!\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"skull_man(scary).bmp\\\" \\\"Yikes!\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"]\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"dijon_poupon.doc\\\" \\\"best mustard\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", Folder \\\"programs\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"[ File \\\"fartwizard.exe\\\" \\\"10gotofart\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"owl_bandit.dmg\\\" \\\"mov eax, h00t\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"not_a_virus.exe\\\" \\\"really not a virus\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", Folder \\\"source code\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", \"[ File \\\"best_hs_prog.hs\\\" \\\"main = print (fix error)\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \", File \\\"random.hs\\\" \\\"main = print 4\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"]\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"]\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"]\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u8FD9\\u5C31\\u662F\\u76EE\\u524D\\u6211\\u7684\\u78C1\\u789F\\u7684\\u5185\\u5BB9\\u3002\"), mdx(\"p\", null, \"A zipper for our file system\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u6709\\u4E86\\u4E00\\u4E2A\\u6863\\u6848\\u7CFB\\u7EDF\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u4E00\\u4E2A Zipper \\u6765\\u8BA9\\u6211\\u4EEC\\u53EF\\u4EE5\\u56DB\\u5904\\u8D70\\u52A8\\uFF0C\\u5E76\\u4E14\\u589E\\u52A0\\u3001\\u4FEE\\u6539\\u6216\\u79FB\\u9664\\u6863\\u6848\\u8DDF\\u8D44\\u6599\\u5939\\u3002\\u5C31\\u50CF\\u4E8C\\u5143\\u6811\\u6216 list\\uFF0C\\u6211\\u4EEC\\u4F1A\\u7528\\u9762\\u5305\\u5C51\\u7559\\u4E0B\\u6211\\u4EEC\\u672A\\u8D70\\u8FC7\\u8DEF\\u5F84\\u7684\\u8D44\\u8BAF\\u3002\\u6B63\\u5982\\u6211\\u4EEC\\u8BF4\\u7684\\uFF0C\\u4E00\\u4E2A\\u9762\\u5305\\u5C51\\u5C31\\u50CF\\u662F\\u4E00\\u4E2A\\u8282\\u70B9\\uFF0C\\u53EA\\u662F\\u4ED6\\u5305\\u542B\\u6240\\u6709\\u9664\\u4E86\\u6211\\u4EEC\\u73B0\\u5728\\u6B63\\u9501\\u5B9A\\u7684\\u5B50\\u6811\\u7684\\u8D44\\u8BAF\\u3002\"), mdx(\"p\", null, \"\\u5728\\u8FD9\\u4E2A\\u6848\\u4F8B\\u4E2D\\uFF0C\\u4E00\\u4E2A\\u9762\\u5305\\u5C51\\u5E94\\u8BE5\\u8981\\u50CF\\u8D44\\u6599\\u5939\\u4E00\\u6837\\uFF0C\\u53EA\\u5DEE\\u5728\\u4ED6\\u7F3A\\u5C11\\u4E86\\u6211\\u4EEC\\u76EE\\u524D\\u9501\\u5B9A\\u7684\\u8D44\\u6599\\u5939\\u7684\\u8D44\\u8BAF\\u3002\\u4E3A\\u4EC0\\u4E48\\u8981\\u50CF\\u8D44\\u6599\\u5939\\u800C\\u4E0D\\u662F\\u6863\\u6848\\u5462\\uFF1F\\u56E0\\u4E3A\\u5982\\u679C\\u6211\\u4EEC\\u9501\\u5B9A\\u4E86\\u4E00\\u4E2A\\u6863\\u6848\\uFF0C\\u6211\\u4EEC\\u5C31\\u6CA1\\u529E\\u6CD5\\u5F80\\u4E0B\\u8D70\\u4E86\\uFF0C\\u6240\\u4EE5\\u8981\\u7559\\u4E0B\\u8D44\\u8BAF\\u8BF4\\u6211\\u4EEC\\u662F\\u4ECE\\u4E00\\u4E2A\\u6863\\u6848\\u8D70\\u8FC7\\u6765\\u7684\\u5E76\\u6CA1\\u6709\\u9053\\u7406\\u3002\\u4E00\\u4E2A\\u6863\\u6848\\u5C31\\u50CF\\u662F\\u4E00\\u68F5\\u7A7A\\u7684\\u6811\\u4E00\\u6837\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6211\\u4EEC\\u9501\\u5B9A\\u5728\\u8D44\\u6599\\u5939 \\\"root\\\"\\uFF0C\\u7136\\u540E\\u9501\\u5B9A\\u5728\\u6863\\u6848 \\\"dijon_poupon.doc\\\"\\uFF0C\\u90A3\\u9762\\u5305\\u5C51\\u91CC\\u7684\\u8D44\\u8BAF\\u4F1A\\u662F\\u4EC0\\u4E48\\u6837\\u5B50\\u5462\\uFF1F\\u4ED6\\u5E94\\u8BE5\\u8981\\u5305\\u542B\\u4E0A\\u4E00\\u5C42\\u8D44\\u6599\\u5939\\u7684\\u540D\\u5B57\\uFF0C\\u4EE5\\u53CA\\u5728\\u8FD9\\u4E2A\\u6863\\u6848\\u524D\\u53CA\\u4E4B\\u540E\\u7684\\u6240\\u6709\\u9879\\u76EE\\u3002\\u6211\\u4EEC\\u8981\\u7684\\u5C31\\u662F\\u4E00\\u4E2A Name \\u8DDF\\u4E24\\u4E32 list\\u3002\\u501F\\u7531\\u4E24\\u4E32 list \\u6765\\u8868\\u8FBE\\u4E4B\\u524D\\u8DDF\\u4E4B\\u540E\\u7684\\u5143\\u7D20\\uFF0C\\u6211\\u4EEC\\u5C31\\u5B8C\\u5168\\u53EF\\u4EE5\\u77E5\\u9053\\u6211\\u4EEC\\u76EE\\u524D\\u9501\\u5B9A\\u5728\\u54EA\\u3002\"), mdx(\"p\", null, \"\\u6765\\u770B\\u770B\\u6211\\u4EEC\\u9762\\u5305\\u5C51\\u7684\\u578B\\u6001\\uFF1A\"), mdx(\"p\", null, \"data FSCrumb = FSCrumb Name \", \"[FSItem][FSItem]\", \" deriving (Show)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u8FD9\\u662F\\u6211\\u4EEC Zipper \\u7684 type synonym\\uFF1A\"), mdx(\"p\", null, \"type FSZipper = (FSItem, \", \"[FSCrumb]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u8981\\u5F80\\u4E0A\\u8D70\\u662F\\u5F88\\u5BB9\\u6613\\u7684\\u4E8B\\u3002\\u6211\\u4EEC\\u53EA\\u8981\\u62FF\\u73B0\\u6709\\u7684\\u9762\\u5305\\u5C51\\u6765\\u7EC4\\u51FA\\u73B0\\u6709\\u7684\\u9501\\u5B9A\\u8DDF\\u9762\\u5305\\u5C51\\uFF1A\"), mdx(\"p\", null, \"fsUp :: FSZipper -> FSZipper\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"fsUp (item, FSCrumb name ls rs:bs) = (Folder name (ls ++ \", \"[item]\", \" ++ rs), bs)\\n\\u7531\\u4E8E\\u6211\\u4EEC\\u7684\\u9762\\u5305\\u5C51\\u6709\\u4E0A\\u4E00\\u5C42\\u8D44\\u6599\\u5939\\u7684\\u540D\\u5B57\\uFF0C\\u8DDF\\u8D44\\u6599\\u5939\\u4E2D\\u4E4B\\u524D\\u8DDF\\u4E4B\\u540E\\u7684\\u5143\\u7D20\\uFF0C\\u8981\\u5F80\\u4E0A\\u8D70\\u4E0D\\u8D39\\u5439\\u7070\\u4E4B\\u529B\\u3002\"), mdx(\"p\", null, \"\\u81F3\\u4E8E\\u8981\\u5F80\\u66F4\\u6DF1\\u5C42\\u8D70\\u5462\\uFF1F\\u5982\\u679C\\u6211\\u4EEC\\u73B0\\u5728\\u5728 \\\"root\\\"\\uFF0C\\u800C\\u6211\\u4EEC\\u5E0C\\u671B\\u8D70\\u5230 \\\"dijon_poupon.doc\\\"\\uFF0C\\u90A3\\u6211\\u4EEC\\u4F1A\\u5728\\u9762\\u5305\\u5C51\\u4E2D\\u7559\\u4E0B \\\"root\\\"\\uFF0C\\u5728 \\\"dijon_poupon.doc\\\" \\u4E4B\\u524D\\u7684\\u5143\\u7D20\\uFF0C\\u4EE5\\u53CA\\u5728\\u4ED6\\u4E4B\\u540E\\u7684\\u5143\\u7D20\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u8FB9\\u6709\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u7ED9\\u4ED6\\u4E00\\u4E2A\\u540D\\u5B57\\uFF0C\\u4ED6\\u4F1A\\u9501\\u5B9A\\u5728\\u5728\\u73B0\\u6709\\u8D44\\u6599\\u5939\\u4E2D\\u7684\\u4E00\\u4E2A\\u6863\\u6848\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"haskell\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-haskell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token import_statement\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" Data.List\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"break\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"fsTo\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"FSZipper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"FSZipper\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"fsTo\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Folder\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"folderName\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"items\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \"   \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"let\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ls\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"item\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"rs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"break\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"nameIs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"items\"), \"  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \"  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"item\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"FSCrumb\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"folderName\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"ls\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"rs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"bs\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"  \\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"nameIs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"::\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"FSItem\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"->\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Bool\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"nameIs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"Folder\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"folderName\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"==\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"folderName\"), \"  \\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"nameIs\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"File\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"fileName\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"name\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"==\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token hvariable\"\n  }), \"fileName\"), \"  \"))), mdx(\"p\", null, \"fsTo \\u63A5\\u53D7\\u4E00\\u4E2A Name \\u8DDF FSZipper\\uFF0C\\u56DE\\u4F20\\u4E00\\u4E2A\\u65B0\\u7684 FSZipper \\u9501\\u5B9A\\u5728\\u67D0\\u4E2A\\u6863\\u6848\\u4E0A\\u3002\\u90A3\\u4E2A\\u6863\\u6848\\u5FC5\\u987B\\u5728\\u73B0\\u5728\\u8EAB\\u5904\\u7684\\u8D44\\u6599\\u5939\\u624D\\u884C\\u3002\\u8FD9\\u51FD\\u6570\\u4E0D\\u4F1A\\u56DB\\u5904\\u627E\\u5BFB\\u8FD9\\u6863\\u6848\\uFF0C\\u4ED6\\u53EA\\u4F1A\\u770B\\u73B0\\u5728\\u7684\\u8D44\\u6599\\u5939\\u3002\"), mdx(\"p\", null, \"\\u9996\\u5148\\u6211\\u4EEC\\u7528 break \\u6765\\u628A\\u8EAB\\u5904\\u8D44\\u6599\\u5939\\u4E2D\\u7684\\u6863\\u6848\\u4EEC\\u5206\\u6210\\u5728\\u6211\\u4EEC\\u8981\\u627E\\u7684\\u6863\\u6848\\u524D\\u7684\\uFF0C\\u8DDF\\u4E4B\\u540E\\u7684\\u3002\\u5982\\u679C\\u8BB0\\u6027\\u597D\\uFF0Cbreak \\u4F1A\\u63A5\\u53D7\\u4E00\\u4E2A predicate \\u8DDF\\u4E00\\u4E2A list\\uFF0C\\u5E76\\u56DE\\u4F20\\u4E24\\u4E2A list \\u7EC4\\u6210\\u7684 pair\\u3002\\u7B2C\\u4E00\\u4E2A list \\u88C5\\u6709 predicate \\u4F1A\\u56DE\\u4F20 False \\u7684\\u5143\\u7D20\\uFF0C\\u800C\\u4E00\\u65E6\\u78B0\\u5230\\u4E00\\u4E2A\\u5143\\u7D20\\u56DE\\u4F20 True\\uFF0C\\u4ED6\\u5C31\\u628A\\u5269\\u4E0B\\u7684\\u6240\\u6709\\u5143\\u7D20\\u90FD\\u653E\\u8FDB\\u7B2C\\u4E8C\\u4E2A list \\u4E2D\\u3002\\u6211\\u4EEC\\u7528\\u4E86\\u4E00\\u4E2A\\u8F85\\u52A9\\u51FD\\u6570\\u53EB\\u505A nameIs\\uFF0C\\u4ED6\\u63A5\\u53D7\\u4E00\\u4E2A\\u540D\\u5B57\\u8DDF\\u4E00\\u4E2A\\u6863\\u6848\\u7CFB\\u7EDF\\u7684\\u5143\\u7D20\\uFF0C\\u5982\\u679C\\u540D\\u5B57\\u76F8\\u7B26\\u7684\\u8BDD\\u4ED6\\u5C31\\u4F1A\\u56DE\\u4F20 True\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728 ls \\u4E00\\u4E2A\\u5305\\u542B\\u6211\\u4EEC\\u8981\\u627E\\u7684\\u5143\\u7D20\\u4E4B\\u524D\\u5143\\u7D20\\u7684 list\\u3002item \\u5C31\\u662F\\u6211\\u4EEC\\u8981\\u627E\\u7684\\u5143\\u7D20\\uFF0C\\u800C rs \\u662F\\u5269\\u4E0B\\u7684\\u90E8\\u4EFD\\u3002\\u6709\\u4E86\\u8FD9\\u4E9B\\uFF0C\\u6211\\u4EEC\\u4E0D\\u8FC7\\u5C31\\u662F\\u628A break \\u4F20\\u56DE\\u6765\\u7684\\u4E1C\\u897F\\u5F53\\u4F5C\\u9501\\u5B9A\\u7684\\u76EE\\u6807\\uFF0C\\u6765\\u5EFA\\u9020\\u4E00\\u4E2A\\u9762\\u5305\\u5C51\\u6765\\u5305\\u542B\\u6240\\u6709\\u5FC5\\u987B\\u7684\\u8D44\\u8BAF\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6211\\u4EEC\\u8981\\u627E\\u7684\\u5143\\u7D20\\u4E0D\\u5728\\u8D44\\u6599\\u5939\\u4E2D\\uFF0C\\u90A3 item:rs \\u8FD9\\u4E2A\\u6A21\\u5F0F\\u4F1A\\u7B26\\u5408\\u5230\\u4E00\\u4E2A\\u7A7A\\u7684 list\\uFF0C\\u4FBF\\u4F1A\\u9020\\u6210\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u73B0\\u5728\\u7684\\u9501\\u5B9A\\u4E0D\\u662F\\u4E00\\u4E2A\\u8D44\\u6599\\u5939\\u800C\\u662F\\u4E00\\u4E2A\\u6863\\u6848\\uFF0C\\u6211\\u4EEC\\u4E5F\\u4F1A\\u9020\\u6210\\u4E00\\u4E2A\\u9519\\u8BEF\\u800C\\u8BA9\\u7A0B\\u5F0F\\u5F53\\u6389\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u6211\\u4EEC\\u6709\\u80FD\\u529B\\u5728\\u6211\\u4EEC\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\u4E2D\\u79FB\\u4E0A\\u79FB\\u4E0B\\uFF0C\\u6211\\u4EEC\\u5C31\\u6765\\u5C1D\\u8BD5\\u4ECE root \\u8D70\\u5230 \\\"skull_man(scary).bmp\\\" \\u8FD9\\u4E2A\\u6863\\u6848\\u5427\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus = (myDisk,[]) -: fsTo \\\"pics\\\" -: fsTo \\\"skull_man(scary).bmp\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"newFocus \\u73B0\\u5728\\u662F\\u4E00\\u4E2A\\u9501\\u5B9A\\u5728 \\\"skull_man(scary).bmp\\\" \\u7684 Zipper\\u3002\\u6211\\u4EEC\\u628A zipper \\u7684\\u7B2C\\u4E00\\u4E2A\\u90E8\\u4EFD\\u62FF\\u51FA\\u6765\\u770B\\u770B\\uFF1A\"), mdx(\"p\", null, \"ghci> fst newFocus\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"File \\\"skull_man(scary).bmp\\\" \\\"Yikes!\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u63A5\\u7740\\u5F80\\u4E0A\\u79FB\\u52A8\\u5E76\\u9501\\u5B9A\\u5728\\u4E00\\u4E2A\\u90BB\\u8FD1\\u7684\\u6863\\u6848 \\\"watermelon_smash.gif\\\"\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus2 = newFocus -: fsUp -: fsTo \\\"watermelon_smash.gif\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> fst newFocus2\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"File \\\"watermelon_smash.gif\\\" \\\"smash!!\\\"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Manipulating our file system\\n\\u73B0\\u5728\\u6211\\u4EEC\\u77E5\\u9053\\u5982\\u4F55\\u904D\\u5386\\u6211\\u4EEC\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\uFF0C\\u56E0\\u6B64\\u64CD\\u4F5C\\u4E5F\\u5E76\\u4E0D\\u662F\\u96BE\\u4E8B\\u3002\\u8FD9\\u8FB9\\u4FBF\\u6765\\u5199\\u4E2A\\u91CD\\u65B0\\u547D\\u540D\\u76EE\\u524D\\u9501\\u5B9A\\u6863\\u6848\\u6216\\u8D44\\u6599\\u5939\\u7684\\u51FD\\u6570\\uFF1A\"), mdx(\"p\", null, \"fsRename :: Name -> FSZipper -> FSZipper\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"fsRename newName (Folder name items, bs) = (Folder newName items, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"fsRename newName (File name dat, bs) = (File newName dat, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u53EF\\u4EE5\\u91CD\\u65B0\\u547D\\u540D \\\"pics\\\" \\u8D44\\u6599\\u5939\\u4E3A \\\"cspi\\\"\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus = (myDisk,[]) -: fsTo \\\"pics\\\" -: fsRename \\\"cspi\\\" -: fsUp\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u8D70\\u5230 \\\"pics\\\" \\u8FD9\\u4E2A\\u8D44\\u6599\\u5939\\uFF0C\\u91CD\\u65B0\\u547D\\u540D\\u4ED6\\u7136\\u540E\\u518D\\u5F80\\u56DE\\u8D70\\u3002\"), mdx(\"p\", null, \"\\u90A3\\u5199\\u4E00\\u4E2A\\u65B0\\u7684\\u5143\\u7D20\\u5728\\u6211\\u4EEC\\u76EE\\u524D\\u7684\\u8D44\\u6599\\u5939\\u5462\\uFF1F\"), mdx(\"p\", null, \"fsNewFile :: FSItem -> FSZipper -> FSZipper\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"fsNewFile item (Folder folderName items, bs) =\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(Folder folderName (item:items), bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6CE8\\u610F\\u8FD9\\u4E2A\\u51FD\\u6570\\u4F1A\\u6CA1\\u529E\\u6CD5\\u5904\\u7406\\u5F53\\u6211\\u4EEC\\u5728\\u9501\\u5B9A\\u5728\\u4E00\\u4E2A\\u6863\\u6848\\u5374\\u8981\\u65B0\\u589E\\u5143\\u7D20\\u7684\\u60C5\\u51B5\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u8981\\u5728 \\\"pics\\\" \\u8D44\\u6599\\u5939\\u4E2D\\u52A0\\u4E00\\u4E2A\\u6863\\u6848\\u7136\\u540E\\u8D70\\u56DE root\\uFF1A\"), mdx(\"p\", null, \"ghci> let newFocus = (myDisk,[]) -: fsTo \\\"pics\\\" -: fsNewFile (File \\\"heh.jpg\\\" \\\"lol\\\") -: fsUp\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u5F53\\u6211\\u4EEC\\u4FEE\\u6539\\u6211\\u4EEC\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\uFF0C\\u4ED6\\u4E0D\\u4F1A\\u771F\\u7684\\u4FEE\\u6539\\u539F\\u672C\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\uFF0C\\u800C\\u662F\\u56DE\\u4F20\\u4E00\\u4EFD\\u65B0\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\u3002\\u8FD9\\u6837\\u6211\\u4EEC\\u5C31\\u53EF\\u4EE5\\u5B58\\u53D6\\u6211\\u4EEC\\u65E7\\u6709\\u7684\\u7CFB\\u7EDF\\uFF08\\u4E5F\\u5C31\\u662F myDisk\\uFF09\\u8DDF\\u65B0\\u7684\\u7CFB\\u7EDF\\uFF08newFocus \\u7684\\u7B2C\\u4E00\\u4E2A\\u90E8\\u4EFD\\uFF09\\u4F7F\\u7528\\u4E00\\u4E2A Zippers\\uFF0C\\u6211\\u4EEC\\u5C31\\u80FD\\u81EA\\u52A8\\u83B7\\u5F97\\u7248\\u672C\\u63A7\\u5236\\uFF0C\\u4EE3\\u8868\\u6211\\u4EEC\\u80FD\\u5B58\\u53D6\\u5230\\u65E7\\u7684\\u8D44\\u6599\\u7ED3\\u6784\\u3002\\u8FD9\\u4E5F\\u4E0D\\u4EC5\\u9650\\u4E8E Zippers\\uFF0C\\u4E5F\\u662F\\u7531\\u4E8E Haskell \\u7684\\u8D44\\u6599\\u7ED3\\u6784\\u6709 immutable \\u7684\\u7279\\u6027\\u3002\\u4F46\\u6709\\u4E86 Zipper\\uFF0C\\u5BF9\\u4E8E\\u64CD\\u4F5C\\u4F1A\\u53D8\\u5F97\\u66F4\\u5BB9\\u6613\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u81EA\\u7531\\u5730\\u5728\\u8D44\\u6599\\u7ED3\\u6784\\u4E2D\\u8D70\\u52A8\\u3002\"), mdx(\"p\", null, \"\\u5C0F\\u5FC3\\u6BCF\\u4E00\\u6B65\\n\\u5230\\u76EE\\u524D\\u4E3A\\u6B62\\uFF0C\\u6211\\u4EEC\\u5E76\\u6CA1\\u6709\\u7279\\u522B\\u7559\\u610F\\u6211\\u4EEC\\u5728\\u8D70\\u52A8\\u65F6\\u662F\\u5426\\u4F1A\\u8D85\\u51FA\\u754C\\u7EBF\\u3002\\u4E0D\\u8BBA\\u8D44\\u6599\\u7ED3\\u6784\\u662F\\u4E8C\\u5143\\u6811\\uFF0CList \\u6216\\u6863\\u6848\\u7CFB\\u7EDF\\u3002\\u4E3E\\u4F8B\\u6765\\u8BF4\\uFF0C\\u6211\\u4EEC\\u7684 goLeft \\u51FD\\u6570\\u63A5\\u53D7\\u4E00\\u4E2A\\u4E8C\\u5143\\u6811\\u7684 Zipper \\u5E76\\u9501\\u5B9A\\u5230\\u4ED6\\u7684\\u5DE6\\u5B50\\u6811\\uFF1A\"), mdx(\"p\", null, \"goLeft :: Zipper a -> Zipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goLeft (Node x l r, bs) = (l, LeftCrumb x r:bs)  \"), mdx(\"p\", null, \"\\u4F46\\u5982\\u679C\\u6211\\u4EEC\\u8D70\\u7684\\u6811\\u5176\\u5B9E\\u662F\\u7A7A\\u7684\\u6811\\u5462\\uFF1F\\u4E5F\\u5C31\\u662F\\u8BF4\\uFF0C\\u5982\\u679C\\u4ED6\\u4E0D\\u662F Node \\u800C\\u662F Empty\\uFF1F\\u518D\\u8FD9\\u60C5\\u51B5\\uFF0C\\u6211\\u4EEC\\u4F1A\\u56E0\\u4E3A\\u6A21\\u5F0F\\u5339\\u914D\\u4E0D\\u5230\\u4E1C\\u897F\\u800C\\u9020\\u6210 runtime error\\u3002\\u6211\\u4EEC\\u6CA1\\u6709\\u5904\\u7406\\u7A7A\\u7684\\u6811\\u7684\\u60C5\\u5F62\\uFF0C\\u4E5F\\u5C31\\u662F\\u6CA1\\u6709\\u5B50\\u6811\\u7684\\u60C5\\u5F62\\u3002\\u5230\\u76EE\\u524D\\u4E3A\\u6B62\\uFF0C\\u6211\\u4EEC\\u5E76\\u6CA1\\u6709\\u8BD5\\u7740\\u5728\\u5DE6\\u5B50\\u6811\\u4E0D\\u5B58\\u5728\\u7684\\u60C5\\u5F62\\u4E0B\\u9501\\u5B9A\\u5DE6\\u5B50\\u6811\\u3002\\u4F46\\u8981\\u8D70\\u5230\\u4E00\\u68F5\\u7A7A\\u7684\\u6811\\u7684\\u5DE6\\u5B50\\u6811\\u5E76\\u4E0D\\u5408\\u7406\\uFF0C\\u53EA\\u662F\\u5230\\u76EE\\u524D\\u4E3A\\u6B62\\u6211\\u4EEC\\u89C6\\u800C\\u4E0D\\u89C1\\u800C\\u5DF2\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6211\\u4EEC\\u5DF2\\u7ECF\\u5728\\u6811\\u7684 root \\u4F46\\u4ECD\\u65E7\\u8BD5\\u7740\\u5F80\\u4E0A\\u8D70\\u5462\\uFF1F\\u8FD9\\u79CD\\u60C5\\u5F62\\u4E5F\\u540C\\u6837\\u4F1A\\u9020\\u6210\\u9519\\u8BEF\\u3002\\u3002\\u7528\\u4E86 Zipper \\u8BA9\\u6211\\u4EEC\\u6BCF\\u4E00\\u6B65\\u90FD\\u597D\\u50CF\\u662F\\u6211\\u4EEC\\u7684\\u6700\\u540E\\u4E00\\u6B65\\u4E00\\u6837\\u3002\\u4E5F\\u5C31\\u662F\\u8BF4\\u6BCF\\u4E00\\u6B65\\u90FD\\u6709\\u53EF\\u80FD\\u4F1A\\u5931\\u8D25\\u3002\\u8FD9\\u8BA9\\u4F60\\u60F3\\u8D77\\u4EC0\\u4E48\\u5417\\uFF1F\\u6CA1\\u9519\\uFF0C\\u5C31\\u662F Monad\\u3002\\u66F4\\u6B63\\u786E\\u7684\\u8BF4\\u662F Maybe monad\\uFF0C\\u4E5F\\u5C31\\u662F\\u6709\\u53EF\\u80FD\\u5931\\u8D25\\u7684 context\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u7528 Maybe monad \\u6765\\u52A0\\u5165\\u53EF\\u80FD\\u5931\\u8D25\\u7684 context\\u3002\\u6211\\u4EEC\\u8981\\u628A\\u539F\\u672C\\u63A5\\u53D7 Zipper \\u7684\\u51FD\\u6570\\u90FD\\u6539\\u6210 monadic \\u7684\\u7248\\u672C\\u3002\\u9996\\u5148\\uFF0C\\u6211\\u4EEC\\u6765\\u5904\\u7406 goLeft \\u8DDF goRight\\u3002\\u51FD\\u6570\\u7684\\u5931\\u8D25\\u6709\\u53EF\\u80FD\\u53CD\\u5E94\\u5728\\u4ED6\\u4EEC\\u7684\\u7ED3\\u679C\\uFF0C\\u8FD9\\u4E2A\\u60C5\\u51B5\\u4E5F\\u4E0D\\u5229\\u5916\\u3002\\u6240\\u4EE5\\u6765\\u770B\\u4E0B\\u9762\\u7684\\u7248\\u672C\\uFF1A\"), mdx(\"p\", null, \"goLeft :: Zipper a -> Maybe (Zipper a)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goLeft (Node x l r, bs) = Just (l, LeftCrumb x r:bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goLeft (Empty, _) = Nothing  \"), mdx(\"p\", null, \"goRight :: Zipper a -> Maybe (Zipper a)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goRight (Node x l r, bs) = Just (r, RightCrumb x l:bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goRight (Empty, _) = Nothing\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u7136\\u540E\\u6211\\u4EEC\\u8BD5\\u7740\\u5728\\u4E00\\u68F5\\u7A7A\\u7684\\u6811\\u5F80\\u5DE6\\u8D70\\uFF0C\\u6211\\u4EEC\\u4F1A\\u5F97\\u5230 Nothing:\"), mdx(\"p\", null, \"ghci> goLeft (Empty, [])\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nothing\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> goLeft (Node 'A' Empty Empty, [])\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Just (Empty,\", \"[LeftCrumb 'A' Empty]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u770B\\u8D77\\u6765\\u4E0D\\u9519\\u3002\\u4E4B\\u524D\\u7684\\u95EE\\u9898\\u662F\\u6211\\u4EEC\\u5728\\u9762\\u5305\\u5C51\\u7528\\u5B8C\\u7684\\u60C5\\u5F62\\u4E0B\\u60F3\\u5F80\\u4E0A\\u8D70\\uFF0C\\u90A3\\u4EE3\\u8868\\u6211\\u4EEC\\u5DF2\\u7ECF\\u5728\\u6811\\u7684 root\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u4E0D\\u6CE8\\u610F\\u7684\\u8BDD\\u90A3 goUp \\u51FD\\u6570\\u5C31\\u4F1A\\u4E22\\u51FA\\u9519\\u8BEF\\u3002\"), mdx(\"p\", null, \"goUp :: Zipper a -> Zipper a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, LeftCrumb x r:bs) = (Node x t r, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, RightCrumb x l:bs) = (Node x l t, bs)\\n\\u6211\\u4EEC\\u6539\\u4E00\\u6539\\u8BA9\\u4ED6\\u53EF\\u4EE5\\u5931\\u8D25\\u5F97\\u597D\\u770B\\u4E9B\\uFF1A\"), mdx(\"p\", null, \"goUp :: Zipper a -> Maybe (Zipper a)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, LeftCrumb x r:bs) = Just (Node x t r, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (t, RightCrumb x l:bs) = Just (Node x l t, bs)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"goUp (_, []) = Nothing\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u5982\\u679C\\u6211\\u4EEC\\u6709\\u9762\\u5305\\u5C51\\uFF0C\\u90A3\\u6211\\u4EEC\\u5C31\\u80FD\\u6210\\u529F\\u9501\\u5B9A\\u65B0\\u7684\\u8282\\u70B9\\uFF0C\\u5982\\u679C\\u6CA1\\u6709\\uFF0C\\u5C31\\u9020\\u6210\\u4E00\\u4E2A\\u5931\\u8D25\\u3002\"), mdx(\"p\", null, \"\\u4E4B\\u524D\\u8FD9\\u4E9B\\u51FD\\u6570\\u662F\\u63A5\\u53D7 Zipper \\u5E76\\u56DE\\u4F20 Zipper\\uFF0C\\u8FD9\\u4EE3\\u8868\\u6211\\u4EEC\\u53EF\\u4EE5\\u8FD9\\u6837\\u64CD\\u4F5C\\uFF1A\"), mdx(\"p\", null, \"gchi> let newFocus = (freeTree,[]) -: goLeft -: goRight\\n\\u4F46\\u73B0\\u5728\\u6211\\u4EEC\\u4E0D\\u56DE\\u4F20 Zipper a \\u800C\\u56DE\\u4F20 Maybe (Zipper a)\\u3002\\u6240\\u4EE5\\u6CA1\\u529E\\u6CD5\\u50CF\\u4E0A\\u9762\\u4E32\\u8D77\\u6765\\u3002\\u6211\\u4EEC\\u5728\\u4E4B\\u524D\\u7AE0\\u8282\\u4E5F\\u6709\\u7C7B\\u4F3C\\u7684\\u95EE\\u9898\\u3002\\u4ED6\\u662F\\u6BCF\\u6B21\\u8D70\\u4E00\\u6B65\\uFF0C\\u800C\\u4ED6\\u7684\\u6BCF\\u4E00\\u6B65\\u90FD\\u6709\\u53EF\\u80FD\\u5931\\u8D25\\u3002\"), mdx(\"p\", null, \"\\u5E78\\u8FD0\\u7684\\u662F\\u6211\\u4EEC\\u53EF\\u4EE5\\u4ECE\\u4E4B\\u524D\\u7684\\u7ECF\\u9A8C\\u4E2D\\u5B66\\u4E60\\uFF0C\\u4E5F\\u5C31\\u662F\\u4F7F\\u7528 >>=\\uFF0C\\u4ED6\\u63A5\\u53D7\\u4E00\\u4E2A\\u6709 context \\u7684\\u503C\\uFF08\\u4E5F\\u5C31\\u662F Maybe (Zipper a)\\uFF09\\uFF0C\\u4F1A\\u628A\\u503C\\u5582\\u8FDB\\u51FD\\u6570\\u5E76\\u4FDD\\u6301\\u5176\\u4ED6 context \\u7684\\u3002\\u6240\\u4EE5\\u5C31\\u50CF\\u4E4B\\u524D\\u7684\\u4F8B\\u5B50\\uFF0C\\u6211\\u4EEC\\u628A -: \\u6362\\u6210 >>=\\u3002\"), mdx(\"p\", null, \"ghci> let coolTree = Node 1 Empty (Node 3 Empty Empty)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> return (coolTree,[]) >>= goRight\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Just (Node 3 Empty Empty,\", \"[RightCrumb 1 Empty]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> return (coolTree,[]) >>= goRight >>= goRight\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Just (Empty,\", \"[RightCrumb 3 Empty,RightCrumb 1 Empty]\", \")\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"ghci> return (coolTree,[]) >>= goRight >>= goRight >>= goRight\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nothing\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u6211\\u4EEC\\u7528 return \\u6765\\u628A Zipper \\u653E\\u5230\\u4E00\\u4E2A Just \\u91CC\\u9762\\u3002\\u7136\\u540E\\u7528 >>= \\u6765\\u5582\\u5230 goRight \\u7684\\u51FD\\u6570\\u4E2D\\u3002\\u9996\\u5148\\u6211\\u4EEC\\u505A\\u4E86\\u4E00\\u68F5\\u6811\\u4ED6\\u7684\\u5DE6\\u5B50\\u6811\\u662F\\u7A7A\\u7684\\uFF0C\\u800C\\u53F3\\u8FB9\\u662F\\u6709\\u4E24\\u9897\\u7A7A\\u5B50\\u6811\\u7684\\u4E00\\u4E2A\\u8282\\u70B9\\u3002\\u5F53\\u6211\\u4EEC\\u5C1D\\u8BD5\\u5F80\\u53F3\\u8D70\\u4E00\\u6B65\\uFF0C\\u4FBF\\u4F1A\\u5F97\\u5230\\u6210\\u529F\\u7684\\u7ED3\\u679C\\u3002\\u5F80\\u53F3\\u8D70\\u4E24\\u6B65\\u4E5F\\u8FD8\\u53EF\\u4EE5\\uFF0C\\u53EA\\u662F\\u4F1A\\u9501\\u5B9A\\u5728\\u4E00\\u68F5\\u7A7A\\u7684\\u5B50\\u6811\\u4E0A\\u3002\\u4F46\\u5F80\\u53F3\\u8D70\\u4E09\\u6B65\\u5C31\\u6CA1\\u529E\\u6CD5\\u4E86\\uFF0C\\u56E0\\u4E3A\\u6211\\u4EEC\\u4E0D\\u80FD\\u5728\\u4E00\\u68F5\\u7A7A\\u5B50\\u6811\\u4E0A\\u5F80\\u53F3\\u8D70\\uFF0C\\u8FD9\\u4E5F\\u662F\\u4E3A\\u4EC0\\u4E48\\u7ED3\\u679C\\u4F1A\\u662F Nothing\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u6211\\u4EEC\\u5177\\u5907\\u4E86\\u5B89\\u5168\\u7F51\\uFF0C\\u80FD\\u591F\\u5728\\u51FA\\u9519\\u7684\\u65F6\\u5019\\u901A\\u77E5\\u6211\\u4EEC\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u7684\\u6863\\u6848\\u7CFB\\u7EDF\\u4ECD\\u6709\\u8BB8\\u591A\\u60C5\\u51B5\\u4F1A\\u9020\\u6210\\u9519\\u8BEF\\uFF0C\\u4F8B\\u5982\\u8BD5\\u7740\\u9501\\u5B9A\\u4E00\\u4E2A\\u6863\\u6848\\uFF0C\\u6216\\u662F\\u4E0D\\u5B58\\u5728\\u7684\\u8D44\\u6599\\u5939\\u3002\\u5269\\u4E0B\\u7684\\u5C31\\u7559\\u4F5C\\u4E60\\u9898\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2018-02-7","title":"Monad进阶","tags":["haskell"]},"fields":{"slug":"/haskell/zippers","templateTag":"haskell"}},"headerIamge":{"childImageSharp":{"fluid":{"src":"/static/e2fc27e9a595aba180863dee8aba2e7b/b8745/haskell-header.png"}}},"logoIamge":{"childImageSharp":{"fluid":{"src":"/static/ee1ae3d6f2df9f1582f5de243d7ef20c/83922/haskell-logo.png","presentationHeight":80,"presentationWidth":512,"originalName":"haskell-logo.png"}}}},"pageContext":{"frontmatter":{"date":"2018-02-7","title":"Monad进阶","tags":["haskell"],"excerpt":"xixx"},"title":"Monad进阶","date":"2018-02-7","slug":"/haskell/zippers","genByTemplate":"haskell"}}}