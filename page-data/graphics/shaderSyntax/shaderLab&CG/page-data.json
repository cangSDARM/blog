{"componentChunkName":"component---src-templates-graphics-js","path":"/graphics/shaderSyntax/shaderLab&CG/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"shaderLab和CG的联系与区别\",\n  \"tags\": [\"graphics\"],\n  \"index\": 4.4\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Naviagtion = makeShortcode(\"Naviagtion\");\nvar Table = makeShortcode(\"Table\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Naviagtion, {\n    desc: \"\\u8FD4\\u56DE\",\n    to: \"./\",\n    mdxType: \"Naviagtion\"\n  }), mdx(\"p\", null, \"-\", \"-------------------------------------------------------------------------------------------------------\"), mdx(Table, {\n    title: \"\\u8BED\\u6CD5\\u7684\\u8054\\u7CFB&\\u533A\\u522B\",\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"\", \"ShaderLab\", \"CG\"],\n    cellStyle: {\n      textAlign: \"center\"\n    }\n  }, {\n    cells: [\"对Properties的调用\", \"Color[propertyName]\", \"fixed4 propertyName(propertyName.rgb)\"],\n    component: [\"th\"]\n  }, {\n    cells: [\"行尾\", \"不需要分号\", \"需要分号\"],\n    component: [\"th\"]\n  }, {\n    cells: [\"函数\", \"不能自定义, 只有功能的开关\", \"可以自定义, 但主要函数不能省略\"],\n    component: [\"th\"]\n  }]), mdx(\"p\", null, \"-\", \"-------------------------------------------------------------------------------------------------------\"), mdx(Table, {\n    title: \"ShaderLab\\u5C5E\\u6027\\u7C7B\\u578B\\u548CCG\\u53D8\\u91CF\\u7C7B\\u578B\\u7684\\u5173\\u7CFB\",\n    mdxType: \"Table\"\n  }, [{\n    cells: [\"ShaderLab\", \"CG\"],\n    cellStyle: {\n      fontSize: 20,\n      textAlign: 'center'\n    }\n  }, {\n    cells: [\"Color, Vector\", \"float4, half4, fixed4\"]\n  }, {\n    cells: [\"Range, Float\", \"float, half, fixed4\"]\n  }, {\n    cells: [\"2D\", \"sampler2D\"]\n  }, {\n    cells: [\"Cube\", \"samplerCube\"]\n  }, {\n    cells: [\"3D\", \"sampler3D\"]\n  }]));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"shaderLab和CG的联系与区别","tags":["graphics"]},"fields":{"slug":"/graphics/shaderSyntax/shaderLab&CG","templateTag":"graphics"},"exports":{"QuoteList":null,"ImgList":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/graphics"},"frontmatter":{"title":"Graphics Programming(一) —— 渲染流水线","index":1}}},{"node":{"fields":{"slug":"/graphics/priorKnowledge"},"frontmatter":{"title":"Graphics Programming(二) —— 前置知识","index":2}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis"},"frontmatter":{"title":"Graphics Programming(三) —— 编写shader的数学基础","index":3}}},{"node":{"fields":{"slug":"/graphics/mathematicalBasis/innerMatrix"},"frontmatter":{"title":"内置的变量: inner matrix","index":3.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax"},"frontmatter":{"title":"Graphics Programming(四) —— Shader语法","index":4}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader1.0"},"frontmatter":{"title":"固定函数着色器: Fixed Function Shader","index":4.1}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader2.0"},"frontmatter":{"title":"顶点/片元着色器: Vertex/Fragment Shader","index":4.2}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shader3.0"},"frontmatter":{"title":"表面着色器: Surface Shader","index":4.3}}},{"node":{"fields":{"slug":"/graphics/shaderSyntax/shaderLab&CG"},"frontmatter":{"title":"shaderLab和CG的联系与区别","index":4.4}}},{"node":{"fields":{"slug":"/graphics/illumination"},"frontmatter":{"title":"Graphics Programming(五) —— 光照","index":5}}},{"node":{"fields":{"slug":"/graphics/texture"},"frontmatter":{"title":"Graphics Programming(六) —— 纹理","index":6}}},{"node":{"fields":{"slug":"/graphics/transparency"},"frontmatter":{"title":"Graphics Programming(七) —— 透明效果","index":7}}},{"node":{"fields":{"slug":"/graphics/simpleAnimation"},"frontmatter":{"title":"Graphics Programming(八) —— 简单动画","index":8}}},{"node":{"fields":{"slug":"/graphics/post-processing"},"frontmatter":{"title":"Graphics Programming(九) —— 后期处理效果","index":9}}},{"node":{"fields":{"slug":"/graphics/particularRendering"},"frontmatter":{"title":"Graphics Programming(十) —— 特殊渲染","index":10}}}]}},"pageContext":{"frontmatter":{"title":"shaderLab和CG的联系与区别","tags":["graphics"],"index":4.4},"title":"shaderLab和CG的联系与区别","date":null,"slug":"/graphics/shaderSyntax/shaderLab&CG","genByTemplate":"graphics"}},"staticQueryHashes":["1663153949","3649515864","49750724","63159454"]}