{"pageProps":{"post":{"matter":{"title":"固定函数着色器: Fixed Function Shader","tags":["graphics"],"index":4.1},"absPath":"/home/runner/work/blog/blog/renderer/mdx/graphics/shaderSyntax/shader1.0.mdx","type":"mdx","slug":["shaderSyntax","shader1.0"],"collection":"graphics","url":"/graphics/shaderSyntax/shader1.0"},"compiled":{"content":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst frontmatter = {\n  \"title\": \"固定函数着色器: Fixed Function Shader\",\n  \"tags\": [\"graphics\"],\n  \"index\": 4.1\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ...props.components\n  }, {Navigation, Tab} = _components;\n  if (!Navigation) _missingMdxReference(\"Navigation\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Navigation, {\n      desc: \"返回\",\n      to: \"./\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"------------在5.3以后, 所有的固定函数着色器都被编译为顶点片元着色器. 实际上的Fixed Function Shader已经不存在--------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"---------------------------对于固定函数着色器, 必须严格使用ShdaerLab的语法. CG/HLSL不支持----------------------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"------------------------------------------------顶点着色器------------------------------------------------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"-----------------------------------------计算顶点颜色, 灯光效果控制-----------------------------------------\"\n    }), \"\\n\", _jsxs(Tab, {\n      children: [\"灯光计算公式:\", _jsx(\"br\", {}), _jsxs(Tab, {\n        children: [\"(Ambient * Lighting Window's Ambient Intensity setting) + [Light Color * (Diffuse + Specular)] + Emission\", _jsx(\"br\", {}), \"(环境光 * 窗口中的环境光设置) + [灯光颜色 * (漫反射光 + 镜面反射光)] + 自发光\"]\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-glsl\",\n      children: _jsxs(_components.code, {\n        className: \"language-glsl code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"SubShader\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    Pass\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//调节顶点颜色\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Color\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"        \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//所有的光效果. 默认Off\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"        Lighting On\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"        \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//镜面反射光(高光)\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"        SeparateSpecular On\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"        \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//灯光效果调节\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        Meterial\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Diffuse\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            Ambient\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"property\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"------------------------------------------------片元着色器------------------------------------------------\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"-------------------------------------------------纹理采样-------------------------------------------------\"\n    }), \"\\n\", _jsxs(Tab, {\n      children: [\"纹理处理:\", _jsxs(Tab, {\n        children: [\"按 等比例 映射\", _jsx(\"br\", {}), \"Point : 点集映射(多余的丢弃)\", _jsx(\"br\", {}), \"Bilinear : 上中下左右平均采样\", _jsx(\"br\", {}), \"Trilinear: 周围共九个平均采样\"]\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-glsl\",\n      children: _jsxs(_components.code, {\n        className: \"language-glsl code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"SubShader\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    Pass\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//设置纹理\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        SetTexture \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"纹理名字\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//纹理运算\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//\\tPrevious: 前一个SetTexture的纹理\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//\\tPrimary : 顶点的颜色\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//\\tTexture : 当前SetTexture的纹理\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//\\tConstant: constantColor的颜色\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"constantColor\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            combine Previous \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" Primary \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" Texture \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" Constant\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"            \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//通过C的alpha值来混合A和B\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//公式:\\t(1 - α)A + αB\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            combine A \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Lerp\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"C\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" B\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","toc":[]},"overview":[{"length":22,"name":"archive"},{"length":15,"name":"graphics"},{"length":1,"name":"math"},{"length":8,"name":"network"},{"length":2,"name":"sstory"},{"name":"practice","length":1}]},"__N_SSG":true}